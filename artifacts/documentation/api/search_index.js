var search_data = {
    'index': {
        'searchIndex': ["icecave","icecave\\coro","icecave\\coro\\channel","icecave\\coro\\channel\\exception","icecave\\coro\\coroutine","icecave\\coro\\deferred","icecave\\coro\\exception","icecave\\coro\\graph","icecave\\coro\\channel\\channel","icecave\\coro\\channel\\channelinterface","icecave\\coro\\channel\\exception\\channelclosedexception","icecave\\coro\\channel\\exception\\channelexceptioninterface","icecave\\coro\\coro","icecave\\coro\\coroutine\\abstractcoroutine","icecave\\coro\\coroutine\\adaptor","icecave\\coro\\coroutine\\adaptorinterface","icecave\\coro\\coroutine\\coroutineinterface","icecave\\coro\\coroutine\\generatorcoroutine","icecave\\coro\\coroutine\\sleepcoroutine","icecave\\coro\\deferred\\abstractdeferred","icecave\\coro\\deferred\\callabledeferred","icecave\\coro\\deferred\\coroutine","icecave\\coro\\deferred\\deferredadaptor","icecave\\coro\\deferred\\deferredadaptorinterface","icecave\\coro\\deferred\\deferredinterface","icecave\\coro\\deferred\\detach","icecave\\coro\\deferred\\resumableinterface","icecave\\coro\\deferred\\returnvalue","icecave\\coro\\deferred\\sleep","icecave\\coro\\engine","icecave\\coro\\engineinterface","icecave\\coro\\exception\\engineexitexception","icecave\\coro\\graph\\abstractbasenode","icecave\\coro\\graph\\abstractnode","icecave\\coro\\graph\\basenodeinterface","icecave\\coro\\graph\\nodeinterface","icecave\\coro\\graph\\root","icecave\\coro\\packageinfo","icecave\\coro\\channel\\channel::__construct","icecave\\coro\\channel\\channel::read","icecave\\coro\\channel\\channel::write","icecave\\coro\\channel\\channel::close","icecave\\coro\\channel\\channel::readwillblock","icecave\\coro\\channel\\channel::writewillblock","icecave\\coro\\channel\\channel::isclosed","icecave\\coro\\channel\\channelinterface::read","icecave\\coro\\channel\\channelinterface::write","icecave\\coro\\channel\\channelinterface::close","icecave\\coro\\channel\\channelinterface::readwillblock","icecave\\coro\\channel\\channelinterface::writewillblock","icecave\\coro\\channel\\channelinterface::isclosed","icecave\\coro\\channel\\exception\\channelclosedexception::__construct","icecave\\coro\\channel\\exception\\channelclosedexception::channel","icecave\\coro\\channel\\exception\\channelexceptioninterface::channel","icecave\\coro\\coro::sleep","icecave\\coro\\coro::return_","icecave\\coro\\coro::this_","icecave\\coro\\coro::engine","icecave\\coro\\coro::parent","icecave\\coro\\coro::detach","icecave\\coro\\coroutine\\abstractcoroutine::__construct","icecave\\coro\\coroutine\\adaptor::__construct","icecave\\coro\\coroutine\\adaptor::adapt","icecave\\coro\\coroutine\\adaptor::adaptstrict","icecave\\coro\\coroutine\\adaptor::tryadapt","icecave\\coro\\coroutine\\adaptorinterface::adapt","icecave\\coro\\coroutine\\adaptorinterface::adaptstrict","icecave\\coro\\coroutine\\adaptorinterface::tryadapt","icecave\\coro\\coroutine\\coroutineinterface::execute","icecave\\coro\\coroutine\\generatorcoroutine::__construct","icecave\\coro\\coroutine\\generatorcoroutine::execute","icecave\\coro\\coroutine\\sleepcoroutine::__construct","icecave\\coro\\coroutine\\sleepcoroutine::execute","icecave\\coro\\deferred\\abstractdeferred::__construct","icecave\\coro\\deferred\\abstractdeferred::configure","icecave\\coro\\deferred\\abstractdeferred::engine","icecave\\coro\\deferred\\abstractdeferred::parent","icecave\\coro\\deferred\\abstractdeferred::resume","icecave\\coro\\deferred\\abstractdeferred::resumewithexception","icecave\\coro\\deferred\\abstractdeferred::resumeparent","icecave\\coro\\deferred\\abstractdeferred::resumeparentwithexception","icecave\\coro\\deferred\\callabledeferred::__construct","icecave\\coro\\deferred\\callabledeferred::execute","icecave\\coro\\deferred\\coroutine::__construct","icecave\\coro\\deferred\\coroutine::execute","icecave\\coro\\deferred\\coroutine::resume","icecave\\coro\\deferred\\coroutine::resumewithexception","icecave\\coro\\deferred\\deferredadaptor::__construct","icecave\\coro\\deferred\\deferredadaptor::adapt","icecave\\coro\\deferred\\deferredadaptor::adaptstrict","icecave\\coro\\deferred\\deferredadaptor::tryadapt","icecave\\coro\\deferred\\deferredadaptorinterface::adapt","icecave\\coro\\deferred\\deferredadaptorinterface::adaptstrict","icecave\\coro\\deferred\\deferredadaptorinterface::tryadapt","icecave\\coro\\deferred\\deferredinterface::configure","icecave\\coro\\deferred\\deferredinterface::engine","icecave\\coro\\deferred\\deferredinterface::parent","icecave\\coro\\deferred\\deferredinterface::resumeparent","icecave\\coro\\deferred\\deferredinterface::resumeparentwithexception","icecave\\coro\\deferred\\deferredinterface::execute","icecave\\coro\\deferred\\detach::__construct","icecave\\coro\\deferred\\detach::execute","icecave\\coro\\deferred\\resumableinterface::resume","icecave\\coro\\deferred\\resumableinterface::resumewithexception","icecave\\coro\\deferred\\returnvalue::__construct","icecave\\coro\\deferred\\returnvalue::execute","icecave\\coro\\deferred\\sleep::__construct","icecave\\coro\\deferred\\sleep::execute","icecave\\coro\\engine::__construct","icecave\\coro\\engine::eventloop","icecave\\coro\\engine::deferredadaptor","icecave\\coro\\engine::run","icecave\\coro\\engine::stop","icecave\\coro\\engine::execute","icecave\\coro\\engine::resume","icecave\\coro\\engine::resumewithexception","icecave\\coro\\engine::pendingresumables","icecave\\coro\\engineinterface::eventloop","icecave\\coro\\engineinterface::run","icecave\\coro\\engineinterface::stop","icecave\\coro\\engineinterface::execute","icecave\\coro\\exception\\engineexitexception::__construct","icecave\\coro\\graph\\abstractbasenode::__construct","icecave\\coro\\graph\\abstractbasenode::attachchild","icecave\\coro\\graph\\abstractbasenode::detachchild","icecave\\coro\\graph\\abstractbasenode::children","icecave\\coro\\graph\\abstractbasenode::abort","icecave\\coro\\graph\\abstractnode::__construct","icecave\\coro\\graph\\abstractnode::attach","icecave\\coro\\graph\\abstractnode::detach","icecave\\coro\\graph\\abstractnode::engine","icecave\\coro\\graph\\abstractnode::parent","icecave\\coro\\graph\\abstractnode::resume","icecave\\coro\\graph\\abstractnode::resumewithexception","icecave\\coro\\graph\\abstractnode::abort","icecave\\coro\\graph\\basenodeinterface::engine","icecave\\coro\\graph\\basenodeinterface::attachchild","icecave\\coro\\graph\\basenodeinterface::detachchild","icecave\\coro\\graph\\basenodeinterface::children","icecave\\coro\\graph\\basenodeinterface::resume","icecave\\coro\\graph\\basenodeinterface::resumewithexception","icecave\\coro\\graph\\basenodeinterface::abort","icecave\\coro\\graph\\nodeinterface::attach","icecave\\coro\\graph\\nodeinterface::detach","icecave\\coro\\graph\\nodeinterface::parent","icecave\\coro\\graph\\root::__construct","icecave\\coro\\graph\\root::engine","icecave\\coro\\graph\\root::resume","icecave\\coro\\graph\\root::resumewithexception","icecave\\coro\\graph\\root::abort"],
        'info': [["Icecave","","Icecave.html","","",3],["Icecave\\Coro","","Icecave\/Coro.html","","",3],["Icecave\\Coro\\Channel","","Icecave\/Coro\/Channel.html","","",3],["Icecave\\Coro\\Channel\\Exception","","Icecave\/Coro\/Channel\/Exception.html","","",3],["Icecave\\Coro\\Coroutine","","Icecave\/Coro\/Coroutine.html","","",3],["Icecave\\Coro\\Deferred","","Icecave\/Coro\/Deferred.html","","",3],["Icecave\\Coro\\Exception","","Icecave\/Coro\/Exception.html","","",3],["Icecave\\Coro\\Graph","","Icecave\/Coro\/Graph.html","","",3],["Channel","Icecave\\Coro\\Channel","Icecave\/Coro\/Channel\/Channel.html","","",1],["ChannelInterface","Icecave\\Coro\\Channel","Icecave\/Coro\/Channel\/ChannelInterface.html","","",1],["ChannelClosedException","Icecave\\Coro\\Channel\\Exception","Icecave\/Coro\/Channel\/Exception\/ChannelClosedException.html"," < Exception","",1],["ChannelExceptionInterface","Icecave\\Coro\\Channel\\Exception","Icecave\/Coro\/Channel\/Exception\/ChannelExceptionInterface.html","","",1],["Coro","Icecave\\Coro","Icecave\/Coro\/Coro.html","","Utility operations for co-routines.",1],["AbstractCoroutine","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/AbstractCoroutine.html"," < AbstractNode","",1],["Adaptor","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/Adaptor.html","","The default implementation of a node adaptor.",1],["AdaptorInterface","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/AdaptorInterface.html","","Adapts arbitrary values into co-routines.",1],["CoroutineInterface","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/CoroutineInterface.html","","",1],["GeneratorCoroutine","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/GeneratorCoroutine.html"," < AbstractCoroutine","A generator-based co-routine.",1],["SleepCoroutine","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/SleepCoroutine.html"," < AbstractCoroutine","Resume the yielding co-routine after a specified number",1],["AbstractDeferred","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html","","",1],["CallableDeferred","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/CallableDeferred.html"," < AbstractDeferred","Invoke a callable upon execution.",1],["Coroutine","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/Coroutine.html"," < AbstractDeferred","Represents a generator-based co-routine.",1],["DeferredAdaptor","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/DeferredAdaptor.html","","The default strategy for adapting arbitrary values",1],["DeferredAdaptorInterface","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/DeferredAdaptorInterface.html","","Adapts arbitrary values into objects that implement",1],["DeferredInterface","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/DeferredInterface.html","","An object that can be executed by the co-routine engine.",1],["Detach","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/Detach.html"," < AbstractDeferred","Detaches from the yielding co-routine and does not",1],["ResumableInterface","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/ResumableInterface.html","","",1],["ReturnValue","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/ReturnValue.html"," < AbstractDeferred","Resume the yielding co-routine's parent with a value.",1],["Sleep","Icecave\\Coro\\Deferred","Icecave\/Coro\/Deferred\/Sleep.html"," < AbstractDeferred","Resume the yielding co-routine after a specified number",1],["Engine","Icecave\\Coro","Icecave\/Coro\/Engine.html","","Coro's default co-routine engine.",1],["EngineInterface","Icecave\\Coro","Icecave\/Coro\/EngineInterface.html","","A co-routine engine.",1],["EngineExitException","Icecave\\Coro\\Exception","Icecave\/Coro\/Exception\/EngineExitException.html"," < Exception","",1],["AbstractBaseNode","Icecave\\Coro\\Graph","Icecave\/Coro\/Graph\/AbstractBaseNode.html","","",1],["AbstractNode","Icecave\\Coro\\Graph","Icecave\/Coro\/Graph\/AbstractNode.html"," < AbstractBaseNode","",1],["BaseNodeInterface","Icecave\\Coro\\Graph","Icecave\/Coro\/Graph\/BaseNodeInterface.html","","The highest-level type in the co-routine graph.",1],["NodeInterface","Icecave\\Coro\\Graph","Icecave\/Coro\/Graph\/NodeInterface.html","","A node that can be attached to a parent.",1],["Root","Icecave\\Coro\\Graph","Icecave\/Coro\/Graph\/Root.html"," < AbstractBaseNode","The root node of a co-routine graph.",1],["PackageInfo","Icecave\\Coro","Icecave\/Coro\/PackageInfo.html","","",1],["Channel::__construct","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method___construct","()","",2],["Channel::read","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_read","()","Read from this channel.",2],["Channel::write","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_write","($value)","Write to this channel.",2],["Channel::close","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_close","()","Close this channel.",2],["Channel::readWillBlock","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_readWillBlock","()","Check if a read operation will block.",2],["Channel::writeWillBlock","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_writeWillBlock","()","Check if a write operation will block.",2],["Channel::isClosed","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_isClosed","()","Check if this channel is closed.",2],["ChannelInterface::read","Icecave\\Coro\\Channel\\ChannelInterface","Icecave\/Coro\/Channel\/ChannelInterface.html#method_read","()","Read from this channel.",2],["ChannelInterface::write","Icecave\\Coro\\Channel\\ChannelInterface","Icecave\/Coro\/Channel\/ChannelInterface.html#method_write","($value)","Write to this channel.",2],["ChannelInterface::close","Icecave\\Coro\\Channel\\ChannelInterface","Icecave\/Coro\/Channel\/ChannelInterface.html#method_close","()","Close this channel.",2],["ChannelInterface::readWillBlock","Icecave\\Coro\\Channel\\ChannelInterface","Icecave\/Coro\/Channel\/ChannelInterface.html#method_readWillBlock","()","Check if a read operation will block.",2],["ChannelInterface::writeWillBlock","Icecave\\Coro\\Channel\\ChannelInterface","Icecave\/Coro\/Channel\/ChannelInterface.html#method_writeWillBlock","()","Check if a write operation will block.",2],["ChannelInterface::isClosed","Icecave\\Coro\\Channel\\ChannelInterface","Icecave\/Coro\/Channel\/ChannelInterface.html#method_isClosed","()","Check if this channel is closed.",2],["ChannelClosedException::__construct","Icecave\\Coro\\Channel\\Exception\\ChannelClosedException","Icecave\/Coro\/Channel\/Exception\/ChannelClosedException.html#method___construct","(<a href=\"Icecave\/Coro\/Channel\/ChannelInterface.html\"><abbr title=\"Icecave\\Coro\\Channel\\ChannelInterface\">ChannelInterface<\/abbr><\/a> $channel, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["ChannelClosedException::channel","Icecave\\Coro\\Channel\\Exception\\ChannelClosedException","Icecave\/Coro\/Channel\/Exception\/ChannelClosedException.html#method_channel","()","Fetch the channel that has been closed.",2],["ChannelExceptionInterface::channel","Icecave\\Coro\\Channel\\Exception\\ChannelExceptionInterface","Icecave\/Coro\/Channel\/Exception\/ChannelExceptionInterface.html#method_channel","()","",2],["Coro::sleep","Icecave\\Coro\\Coro","Icecave\/Coro\/Coro.html#method_sleep","($timeout)","Sleep for a specified period.",2],["Coro::return_","Icecave\\Coro\\Coro","Icecave\/Coro\/Coro.html#method_return_","($value = null)","Return a value to the calling co-routine.",2],["Coro::this_","Icecave\\Coro\\Coro","Icecave\/Coro\/Coro.html#method_this_","()","Return the current co-routine to itself.",2],["Coro::engine","Icecave\\Coro\\Coro","Icecave\/Coro\/Coro.html#method_engine","()","Return the engine to the co-routine.",2],["Coro::parent","Icecave\\Coro\\Coro","Icecave\/Coro\/Coro.html#method_parent","()","Return the current co-routine's parent to the co-routine.",2],["Coro::detach","Icecave\\Coro\\Coro","Icecave\/Coro\/Coro.html#method_detach","(<abbr title=\"Icecave\\Coro\\callable\">callable<\/abbr> $callback = null)","Detach and never return.",2],["AbstractCoroutine::__construct","Icecave\\Coro\\Coroutine\\AbstractCoroutine","Icecave\/Coro\/Coroutine\/AbstractCoroutine.html#method___construct","()","",2],["Adaptor::__construct","Icecave\\Coro\\Coroutine\\Adaptor","Icecave\/Coro\/Coroutine\/Adaptor.html#method___construct","()","",2],["Adaptor::adapt","Icecave\\Coro\\Coroutine\\Adaptor","Icecave\/Coro\/Coroutine\/Adaptor.html#method_adapt","(mixed $value)","Adapt a value into a co-routine.",2],["Adaptor::adaptStrict","Icecave\\Coro\\Coroutine\\Adaptor","Icecave\/Coro\/Coroutine\/Adaptor.html#method_adaptStrict","(mixed $value)","Attempt to adapt a value into a co-routine.",2],["Adaptor::tryAdapt","Icecave\\Coro\\Coroutine\\Adaptor","Icecave\/Coro\/Coroutine\/Adaptor.html#method_tryAdapt","(mixed $value)","Attempt to adapt a value into a co-routine.",2],["AdaptorInterface::adapt","Icecave\\Coro\\Coroutine\\AdaptorInterface","Icecave\/Coro\/Coroutine\/AdaptorInterface.html#method_adapt","(mixed $value)","Adapt a value into a co-routine.",2],["AdaptorInterface::adaptStrict","Icecave\\Coro\\Coroutine\\AdaptorInterface","Icecave\/Coro\/Coroutine\/AdaptorInterface.html#method_adaptStrict","(mixed $value)","Attempt to adapt a value into a co-routine.",2],["AdaptorInterface::tryAdapt","Icecave\\Coro\\Coroutine\\AdaptorInterface","Icecave\/Coro\/Coroutine\/AdaptorInterface.html#method_tryAdapt","(mixed $value)","Attempt to adapt a value into a co-routine.",2],["CoroutineInterface::execute","Icecave\\Coro\\Coroutine\\CoroutineInterface","Icecave\/Coro\/Coroutine\/CoroutineInterface.html#method_execute","()","Begin execution of this co-routine.",2],["GeneratorCoroutine::__construct","Icecave\\Coro\\Coroutine\\GeneratorCoroutine","Icecave\/Coro\/Coroutine\/GeneratorCoroutine.html#method___construct","(<a href=\"http:\/\/php.net\/Generator\"><abbr title=\"Generator\">Generator<\/abbr><\/a> $generator, <a href=\"Icecave\/Coro\/Coroutine\/AdaptorInterface.html\"><abbr title=\"Icecave\\Coro\\Coroutine\\AdaptorInterface\">AdaptorInterface<\/abbr><\/a> $nodeAdaptor)","",2],["GeneratorCoroutine::execute","Icecave\\Coro\\Coroutine\\GeneratorCoroutine","Icecave\/Coro\/Coroutine\/GeneratorCoroutine.html#method_execute","()","Begin execution of this co-routine.",2],["SleepCoroutine::__construct","Icecave\\Coro\\Coroutine\\SleepCoroutine","Icecave\/Coro\/Coroutine\/SleepCoroutine.html#method___construct","(<abbr title=\"Icecave\\Coro\\Coroutine\\float\">float<\/abbr>|integer $timeout)","",2],["SleepCoroutine::execute","Icecave\\Coro\\Coroutine\\SleepCoroutine","Icecave\/Coro\/Coroutine\/SleepCoroutine.html#method_execute","()","Resume execution of the parent after a timeout.",2],["AbstractDeferred::__construct","Icecave\\Coro\\Deferred\\AbstractDeferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html#method___construct","()","",2],["AbstractDeferred::configure","Icecave\\Coro\\Deferred\\AbstractDeferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html#method_configure","(<a href=\"Icecave\/Coro\/EngineInterface.html\"><abbr title=\"Icecave\\Coro\\EngineInterface\">EngineInterface<\/abbr><\/a> $engine, <a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $parent)","Configure the deferred object.",2],["AbstractDeferred::engine","Icecave\\Coro\\Deferred\\AbstractDeferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html#method_engine","()","Fetch the co-routine engine on which this deferred",2],["AbstractDeferred::parent","Icecave\\Coro\\Deferred\\AbstractDeferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html#method_parent","()","Fetch the object that spawned this deferred object.",2],["AbstractDeferred::resume","Icecave\\Coro\\Deferred\\AbstractDeferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html#method_resume","(<a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $source, mixed $value = null)","Resume execution.",2],["AbstractDeferred::resumeWithException","Icecave\\Coro\\Deferred\\AbstractDeferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html#method_resumeWithException","(<a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $source, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution, with an exception.",2],["AbstractDeferred::resumeParent","Icecave\\Coro\\Deferred\\AbstractDeferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html#method_resumeParent","(mixed $value = null)","Resume execution of this object's parent.",2],["AbstractDeferred::resumeParentWithException","Icecave\\Coro\\Deferred\\AbstractDeferred","Icecave\/Coro\/Deferred\/AbstractDeferred.html#method_resumeParentWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume exeception of this object's parent, by throwing",2],["CallableDeferred::__construct","Icecave\\Coro\\Deferred\\CallableDeferred","Icecave\/Coro\/Deferred\/CallableDeferred.html#method___construct","(<abbr title=\"Icecave\\Coro\\Deferred\\callable\">callable<\/abbr> $callback)","",2],["CallableDeferred::execute","Icecave\\Coro\\Deferred\\CallableDeferred","Icecave\/Coro\/Deferred\/CallableDeferred.html#method_execute","()","Invoke the callback with $this as the only parameter.",2],["Coroutine::__construct","Icecave\\Coro\\Deferred\\Coroutine","Icecave\/Coro\/Deferred\/Coroutine.html#method___construct","(<a href=\"http:\/\/php.net\/Generator\"><abbr title=\"Generator\">Generator<\/abbr><\/a> $generator, <a href=\"Icecave\/Coro\/Deferred\/DeferredAdaptorInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\DeferredAdaptorInterface\">DeferredAdaptorInterface<\/abbr><\/a> $deferredAdaptor)","",2],["Coroutine::execute","Icecave\\Coro\\Deferred\\Coroutine","Icecave\/Coro\/Deferred\/Coroutine.html#method_execute","()","Execution the next step of the co-routine.",2],["Coroutine::resume","Icecave\\Coro\\Deferred\\Coroutine","Icecave\/Coro\/Deferred\/Coroutine.html#method_resume","(<a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $source, mixed $value = null)","Resume execution.",2],["Coroutine::resumeWithException","Icecave\\Coro\\Deferred\\Coroutine","Icecave\/Coro\/Deferred\/Coroutine.html#method_resumeWithException","(<a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $source, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution, with an exception.",2],["DeferredAdaptor::__construct","Icecave\\Coro\\Deferred\\DeferredAdaptor","Icecave\/Coro\/Deferred\/DeferredAdaptor.html#method___construct","()","",2],["DeferredAdaptor::adapt","Icecave\\Coro\\Deferred\\DeferredAdaptor","Icecave\/Coro\/Deferred\/DeferredAdaptor.html#method_adapt","(mixed $value)","Adapt a value into a deferred object.",2],["DeferredAdaptor::adaptStrict","Icecave\\Coro\\Deferred\\DeferredAdaptor","Icecave\/Coro\/Deferred\/DeferredAdaptor.html#method_adaptStrict","(mixed $value)","Adapt a value into a deferred object.",2],["DeferredAdaptor::tryAdapt","Icecave\\Coro\\Deferred\\DeferredAdaptor","Icecave\/Coro\/Deferred\/DeferredAdaptor.html#method_tryAdapt","(mixed $value)","Attempt to adapt a value into a deferred object.",2],["DeferredAdaptorInterface::adapt","Icecave\\Coro\\Deferred\\DeferredAdaptorInterface","Icecave\/Coro\/Deferred\/DeferredAdaptorInterface.html#method_adapt","(mixed $value)","Adapt a value into a deferred object.",2],["DeferredAdaptorInterface::adaptStrict","Icecave\\Coro\\Deferred\\DeferredAdaptorInterface","Icecave\/Coro\/Deferred\/DeferredAdaptorInterface.html#method_adaptStrict","(mixed $value)","Adapt a value into a deferred object.",2],["DeferredAdaptorInterface::tryAdapt","Icecave\\Coro\\Deferred\\DeferredAdaptorInterface","Icecave\/Coro\/Deferred\/DeferredAdaptorInterface.html#method_tryAdapt","(mixed $value)","Attempt to adapt a value into a deferred object.",2],["DeferredInterface::configure","Icecave\\Coro\\Deferred\\DeferredInterface","Icecave\/Coro\/Deferred\/DeferredInterface.html#method_configure","(<a href=\"Icecave\/Coro\/EngineInterface.html\"><abbr title=\"Icecave\\Coro\\EngineInterface\">EngineInterface<\/abbr><\/a> $engine, <a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $parent)","Configure the deferred object.",2],["DeferredInterface::engine","Icecave\\Coro\\Deferred\\DeferredInterface","Icecave\/Coro\/Deferred\/DeferredInterface.html#method_engine","()","Fetch the co-routine engine on which this deferred",2],["DeferredInterface::parent","Icecave\\Coro\\Deferred\\DeferredInterface","Icecave\/Coro\/Deferred\/DeferredInterface.html#method_parent","()","Fetch the object that spawned this deferred object.",2],["DeferredInterface::resumeParent","Icecave\\Coro\\Deferred\\DeferredInterface","Icecave\/Coro\/Deferred\/DeferredInterface.html#method_resumeParent","(mixed $value = null)","Resume execution of this object's parent.",2],["DeferredInterface::resumeParentWithException","Icecave\\Coro\\Deferred\\DeferredInterface","Icecave\/Coro\/Deferred\/DeferredInterface.html#method_resumeParentWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume exeception of this object's parent, by throwing",2],["DeferredInterface::execute","Icecave\\Coro\\Deferred\\DeferredInterface","Icecave\/Coro\/Deferred\/DeferredInterface.html#method_execute","()","Execute this deferred object.",2],["Detach::__construct","Icecave\\Coro\\Deferred\\Detach","Icecave\/Coro\/Deferred\/Detach.html#method___construct","(<abbr title=\"Icecave\\Coro\\Deferred\\callable\">callable<\/abbr> $callback = null)","",2],["Detach::execute","Icecave\\Coro\\Deferred\\Detach","Icecave\/Coro\/Deferred\/Detach.html#method_execute","()","Invoke the callback, if provided.",2],["ResumableInterface::resume","Icecave\\Coro\\Deferred\\ResumableInterface","Icecave\/Coro\/Deferred\/ResumableInterface.html#method_resume","(<a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $source, mixed $value = null)","Resume execution.",2],["ResumableInterface::resumeWithException","Icecave\\Coro\\Deferred\\ResumableInterface","Icecave\/Coro\/Deferred\/ResumableInterface.html#method_resumeWithException","(<a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $source, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution, with an exception.",2],["ReturnValue::__construct","Icecave\\Coro\\Deferred\\ReturnValue","Icecave\/Coro\/Deferred\/ReturnValue.html#method___construct","(mixed $value)","",2],["ReturnValue::execute","Icecave\\Coro\\Deferred\\ReturnValue","Icecave\/Coro\/Deferred\/ReturnValue.html#method_execute","()","Forward the stored value to this object's grandparent.",2],["Sleep::__construct","Icecave\\Coro\\Deferred\\Sleep","Icecave\/Coro\/Deferred\/Sleep.html#method___construct","(<abbr title=\"Icecave\\Coro\\Deferred\\float\">float<\/abbr>|integer $timeout)","",2],["Sleep::execute","Icecave\\Coro\\Deferred\\Sleep","Icecave\/Coro\/Deferred\/Sleep.html#method_execute","()","Resume execution of the parent after a timeout.",2],["Engine::__construct","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method___construct","(<abbr title=\"React\\EventLoop\\LoopInterface\">LoopInterface<\/abbr> $eventLoop = null, <a href=\"Icecave\/Coro\/Deferred\/DeferredAdaptorInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\DeferredAdaptorInterface\">DeferredAdaptorInterface<\/abbr><\/a> $deferredAdaptor = null)","",2],["Engine::eventLoop","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method_eventLoop","()","Fetch the ReactPHP event loop to used by the engine",2],["Engine::deferredAdaptor","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method_deferredAdaptor","()","Fetch the adaptor used to convert values into deferred",2],["Engine::run","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method_run","()","Run the co-routine engine.",2],["Engine::stop","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method_stop","()","Stop the co-routine engine.",2],["Engine::execute","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method_execute","(mixed $unitOfWork)","Execute a unit of work.",2],["Engine::resume","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method_resume","(<a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $source, mixed $value = null)","Resume execution.",2],["Engine::resumeWithException","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method_resumeWithException","(<a href=\"Icecave\/Coro\/Deferred\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Deferred\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $source, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution, with an exception.",2],["Engine::pendingResumables","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine.html#method_pendingResumables","()","Fetch the set of pending resumables that are direct",2],["EngineInterface::eventLoop","Icecave\\Coro\\EngineInterface","Icecave\/Coro\/EngineInterface.html#method_eventLoop","()","Fetch the ReactPHP event loop to used by the engine",2],["EngineInterface::run","Icecave\\Coro\\EngineInterface","Icecave\/Coro\/EngineInterface.html#method_run","()","Run the co-routine engine.",2],["EngineInterface::stop","Icecave\\Coro\\EngineInterface","Icecave\/Coro\/EngineInterface.html#method_stop","()","Stop the co-routine engine.",2],["EngineInterface::execute","Icecave\\Coro\\EngineInterface","Icecave\/Coro\/EngineInterface.html#method_execute","(mixed $unitOfWork)","Execute a unit of work.",2],["EngineExitException::__construct","Icecave\\Coro\\Exception\\EngineExitException","Icecave\/Coro\/Exception\/EngineExitException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["AbstractBaseNode::__construct","Icecave\\Coro\\Graph\\AbstractBaseNode","Icecave\/Coro\/Graph\/AbstractBaseNode.html#method___construct","()","",2],["AbstractBaseNode::attachChild","Icecave\\Coro\\Graph\\AbstractBaseNode","Icecave\/Coro\/Graph\/AbstractBaseNode.html#method_attachChild","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $node)","Attach a child to this node.",2],["AbstractBaseNode::detachChild","Icecave\\Coro\\Graph\\AbstractBaseNode","Icecave\/Coro\/Graph\/AbstractBaseNode.html#method_detachChild","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $node)","Detach a child from this node.",2],["AbstractBaseNode::children","Icecave\\Coro\\Graph\\AbstractBaseNode","Icecave\/Coro\/Graph\/AbstractBaseNode.html#method_children","()","Fetch the children attached to the root.",2],["AbstractBaseNode::abort","Icecave\\Coro\\Graph\\AbstractBaseNode","Icecave\/Coro\/Graph\/AbstractBaseNode.html#method_abort","()","Abort all waiting nodes recursively.",2],["AbstractNode::__construct","Icecave\\Coro\\Graph\\AbstractNode","Icecave\/Coro\/Graph\/AbstractNode.html#method___construct","()","",2],["AbstractNode::attach","Icecave\\Coro\\Graph\\AbstractNode","Icecave\/Coro\/Graph\/AbstractNode.html#method_attach","(<a href=\"Icecave\/Coro\/Graph\/BaseNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\BaseNodeInterface\">BaseNodeInterface<\/abbr><\/a> $parent)","Attach this node to a parent.",2],["AbstractNode::detach","Icecave\\Coro\\Graph\\AbstractNode","Icecave\/Coro\/Graph\/AbstractNode.html#method_detach","()","Detach this node from its parent.",2],["AbstractNode::engine","Icecave\\Coro\\Graph\\AbstractNode","Icecave\/Coro\/Graph\/AbstractNode.html#method_engine","()","Fetch the engine to which this node is attached.",2],["AbstractNode::parent","Icecave\\Coro\\Graph\\AbstractNode","Icecave\/Coro\/Graph\/AbstractNode.html#method_parent","()","Fetch the parent of this node.",2],["AbstractNode::resume","Icecave\\Coro\\Graph\\AbstractNode","Icecave\/Coro\/Graph\/AbstractNode.html#method_resume","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $child, mixed $value = null)","Resume execution.",2],["AbstractNode::resumeWithException","Icecave\\Coro\\Graph\\AbstractNode","Icecave\/Coro\/Graph\/AbstractNode.html#method_resumeWithException","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $child, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution, with an exception.",2],["AbstractNode::abort","Icecave\\Coro\\Graph\\AbstractNode","Icecave\/Coro\/Graph\/AbstractNode.html#method_abort","()","Abort all waiting nodes recursively.",2],["BaseNodeInterface::engine","Icecave\\Coro\\Graph\\BaseNodeInterface","Icecave\/Coro\/Graph\/BaseNodeInterface.html#method_engine","()","Fetch the engine to which this node is attached.",2],["BaseNodeInterface::attachChild","Icecave\\Coro\\Graph\\BaseNodeInterface","Icecave\/Coro\/Graph\/BaseNodeInterface.html#method_attachChild","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $node)","Attach a child to this node.",2],["BaseNodeInterface::detachChild","Icecave\\Coro\\Graph\\BaseNodeInterface","Icecave\/Coro\/Graph\/BaseNodeInterface.html#method_detachChild","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $node)","Detach a child from this node.",2],["BaseNodeInterface::children","Icecave\\Coro\\Graph\\BaseNodeInterface","Icecave\/Coro\/Graph\/BaseNodeInterface.html#method_children","()","Fetch the children attached to the root.",2],["BaseNodeInterface::resume","Icecave\\Coro\\Graph\\BaseNodeInterface","Icecave\/Coro\/Graph\/BaseNodeInterface.html#method_resume","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $child, mixed $value = null)","Resume execution.",2],["BaseNodeInterface::resumeWithException","Icecave\\Coro\\Graph\\BaseNodeInterface","Icecave\/Coro\/Graph\/BaseNodeInterface.html#method_resumeWithException","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $child, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution, with an exception.",2],["BaseNodeInterface::abort","Icecave\\Coro\\Graph\\BaseNodeInterface","Icecave\/Coro\/Graph\/BaseNodeInterface.html#method_abort","()","Abort all waiting nodes recursively.",2],["NodeInterface::attach","Icecave\\Coro\\Graph\\NodeInterface","Icecave\/Coro\/Graph\/NodeInterface.html#method_attach","(<a href=\"Icecave\/Coro\/Graph\/BaseNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\BaseNodeInterface\">BaseNodeInterface<\/abbr><\/a> $parent)","Attach this node to a parent.",2],["NodeInterface::detach","Icecave\\Coro\\Graph\\NodeInterface","Icecave\/Coro\/Graph\/NodeInterface.html#method_detach","()","Detach this node from its parent.",2],["NodeInterface::parent","Icecave\\Coro\\Graph\\NodeInterface","Icecave\/Coro\/Graph\/NodeInterface.html#method_parent","()","Fetch the parent of this node.",2],["Root::__construct","Icecave\\Coro\\Graph\\Root","Icecave\/Coro\/Graph\/Root.html#method___construct","(<a href=\"Icecave\/Coro\/EngineInterface.html\"><abbr title=\"Icecave\\Coro\\EngineInterface\">EngineInterface<\/abbr><\/a> $engine)","",2],["Root::engine","Icecave\\Coro\\Graph\\Root","Icecave\/Coro\/Graph\/Root.html#method_engine","()","Fetch the engine to which this node belongs.",2],["Root::resume","Icecave\\Coro\\Graph\\Root","Icecave\/Coro\/Graph\/Root.html#method_resume","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $child, mixed $value = null)","Resume execution.",2],["Root::resumeWithException","Icecave\\Coro\\Graph\\Root","Icecave\/Coro\/Graph\/Root.html#method_resumeWithException","(<a href=\"Icecave\/Coro\/Graph\/NodeInterface.html\"><abbr title=\"Icecave\\Coro\\Graph\\NodeInterface\">NodeInterface<\/abbr><\/a> $child, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution, with an exception.",2],["Root::abort","Icecave\\Coro\\Graph\\Root","Icecave\/Coro\/Graph\/Root.html#method_abort","()","Abort all waiting nodes recursively.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']