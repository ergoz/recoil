var search_data = {
    'index': {
        'searchIndex': ["icecave","icecave\\coro","icecave\\coro\\channel","icecave\\coro\\channel\\exception","icecave\\coro\\coroutine","icecave\\coro\\coroutine\\exception","icecave\\coro\\engine","icecave\\coro\\primitive","icecave\\coro\\react","icecave\\coro\\tree","icecave\\coro\\channel\\bidirectionalchannelinterface","icecave\\coro\\channel\\channel","icecave\\coro\\channel\\channelinterface","icecave\\coro\\channel\\exception\\channelclosedexception","icecave\\coro\\channel\\exception\\channelexceptioninterface","icecave\\coro\\channel\\readablechannelinterface","icecave\\coro\\channel\\writablechannelinterface","icecave\\coro\\coro","icecave\\coro\\coroutine\\baseresumableinterface","icecave\\coro\\coroutine\\coroutine","icecave\\coro\\coroutine\\coroutineinterface","icecave\\coro\\coroutine\\coroutinestatus","icecave\\coro\\coroutine\\driverinterface","icecave\\coro\\coroutine\\exception\\cancelexception","icecave\\coro\\coroutine\\generatordriver","icecave\\coro\\coroutine\\resumableinterface","icecave\\coro\\coroutine\\scopedresumable","icecave\\coro\\engine\\abstractengine","icecave\\coro\\engine\\engineinterface","icecave\\coro\\engine\\facade","icecave\\coro\\engine\\facadeinterface","icecave\\coro\\engine\\facadeoperation","icecave\\coro\\engine\\nodeadaptor","icecave\\coro\\engine\\nodeadaptorinterface","icecave\\coro\\engine\\synchronousengine","icecave\\coro\\packageinfo","icecave\\coro\\primitive\\abstractdetachprimitive","icecave\\coro\\primitive\\abstractprimitive","icecave\\coro\\primitive\\callbackprimitive","icecave\\coro\\primitive\\cooperativeprimitive","icecave\\coro\\primitive\\detachprimitive","icecave\\coro\\primitive\\detachwithexceptionprimitive","icecave\\coro\\primitive\\sleepprimitive","icecave\\coro\\primitive\\suspendprimitive","icecave\\coro\\react\\eventloopengine","icecave\\coro\\react\\facade","icecave\\coro\\react\\nodeadaptor","icecave\\coro\\react\\promiseprimitive","icecave\\coro\\tree\\childnodeinterface","icecave\\coro\\tree\\executablenodeinterface","icecave\\coro\\tree\\nodeinterface","icecave\\coro\\tree\\parentnodeinterface","icecave\\coro\\tree\\rootnode","icecave\\coro\\channel\\channel::__construct","icecave\\coro\\channel\\channel::read","icecave\\coro\\channel\\channel::tryread","icecave\\coro\\channel\\channel::write","icecave\\coro\\channel\\channel::trywrite","icecave\\coro\\channel\\channel::close","icecave\\coro\\channel\\channel::readytoread","icecave\\coro\\channel\\channel::readyforwrite","icecave\\coro\\channel\\channel::isclosed","icecave\\coro\\channel\\channelinterface::close","icecave\\coro\\channel\\channelinterface::isclosed","icecave\\coro\\channel\\exception\\channelclosedexception::__construct","icecave\\coro\\channel\\exception\\channelclosedexception::channel","icecave\\coro\\channel\\exception\\channelexceptioninterface::channel","icecave\\coro\\channel\\readablechannelinterface::read","icecave\\coro\\channel\\readablechannelinterface::tryread","icecave\\coro\\channel\\writablechannelinterface::write","icecave\\coro\\channel\\writablechannelinterface::trywrite","icecave\\coro\\coro::__callstatic","icecave\\coro\\coroutine\\baseresumableinterface::resume","icecave\\coro\\coroutine\\baseresumableinterface::resumewithexception","icecave\\coro\\coroutine\\baseresumableinterface::cancel","icecave\\coro\\coroutine\\coroutine::__construct","icecave\\coro\\coroutine\\coroutine::status","icecave\\coro\\coroutine\\coroutine::returnvalue","icecave\\coro\\coroutine\\coroutine::setreturnvalue","icecave\\coro\\coroutine\\coroutine::execute","icecave\\coro\\coroutine\\coroutine::resume","icecave\\coro\\coroutine\\coroutine::resumewithexception","icecave\\coro\\coroutine\\coroutine::cancel","icecave\\coro\\coroutine\\coroutine::onvalue","icecave\\coro\\coroutine\\coroutine::onerror","icecave\\coro\\coroutine\\coroutineinterface::status","icecave\\coro\\coroutine\\coroutineinterface::returnvalue","icecave\\coro\\coroutine\\coroutineinterface::setreturnvalue","icecave\\coro\\coroutine\\driverinterface::fetch","icecave\\coro\\coroutine\\exception\\cancelexception::__construct","icecave\\coro\\coroutine\\generatordriver::__construct","icecave\\coro\\coroutine\\generatordriver::generator","icecave\\coro\\coroutine\\generatordriver::fetch","icecave\\coro\\coroutine\\generatordriver::resume","icecave\\coro\\coroutine\\generatordriver::resumewithexception","icecave\\coro\\coroutine\\generatordriver::cancel","icecave\\coro\\coroutine\\scopedresumable::__construct","icecave\\coro\\coroutine\\scopedresumable::__destruct","icecave\\coro\\coroutine\\scopedresumable::resume","icecave\\coro\\coroutine\\scopedresumable::resumewithexception","icecave\\coro\\coroutine\\scopedresumable::cancel","icecave\\coro\\coroutine\\scopedresumable::release","icecave\\coro\\coroutine\\scopedresumable::innerresumable","icecave\\coro\\engine\\abstractengine::__construct","icecave\\coro\\engine\\abstractengine::enqueue","icecave\\coro\\engine\\abstractengine::rootnode","icecave\\coro\\engine\\abstractengine::nodeadaptor","icecave\\coro\\engine\\abstractengine::facadeimplementation","icecave\\coro\\engine\\engineinterface::enqueue","icecave\\coro\\engine\\engineinterface::enqueuecallback","icecave\\coro\\engine\\engineinterface::enqueuedelayedcallback","icecave\\coro\\engine\\engineinterface::rootnode","icecave\\coro\\engine\\engineinterface::nodeadaptor","icecave\\coro\\engine\\engineinterface::facadeimplementation","icecave\\coro\\engine\\facade::__construct","icecave\\coro\\engine\\facade::get","icecave\\coro\\engine\\facade::result","icecave\\coro\\engine\\facade::enqueue","icecave\\coro\\engine\\facade::enqueuecallback","icecave\\coro\\engine\\facade::engine","icecave\\coro\\engine\\facade::sleep","icecave\\coro\\engine\\facade::suspend","icecave\\coro\\engine\\facade::detach","icecave\\coro\\engine\\facade::detachwithexception","icecave\\coro\\engine\\facadeinterface::get","icecave\\coro\\engine\\facadeinterface::result","icecave\\coro\\engine\\facadeinterface::enqueue","icecave\\coro\\engine\\facadeinterface::enqueuecallback","icecave\\coro\\engine\\facadeinterface::engine","icecave\\coro\\engine\\facadeinterface::sleep","icecave\\coro\\engine\\facadeinterface::suspend","icecave\\coro\\engine\\facadeinterface::detach","icecave\\coro\\engine\\facadeinterface::detachwithexception","icecave\\coro\\engine\\facadeoperation::__construct","icecave\\coro\\engine\\facadeoperation::execute","icecave\\coro\\engine\\nodeadaptor::__construct","icecave\\coro\\engine\\nodeadaptor::adapt","icecave\\coro\\engine\\nodeadaptor::tryadapt","icecave\\coro\\engine\\nodeadaptorinterface::adapt","icecave\\coro\\engine\\nodeadaptorinterface::tryadapt","icecave\\coro\\engine\\synchronousengine::__construct","icecave\\coro\\engine\\synchronousengine::enqueuecallback","icecave\\coro\\engine\\synchronousengine::enqueuedelayedcallback","icecave\\coro\\engine\\synchronousengine::run","icecave\\coro\\primitive\\abstractdetachprimitive::__construct","icecave\\coro\\primitive\\abstractdetachprimitive::execute","icecave\\coro\\primitive\\callbackprimitive::__construct","icecave\\coro\\primitive\\callbackprimitive::execute","icecave\\coro\\primitive\\cooperativeprimitive::execute","icecave\\coro\\primitive\\sleepprimitive::__construct","icecave\\coro\\primitive\\sleepprimitive::execute","icecave\\coro\\primitive\\suspendprimitive::__construct","icecave\\coro\\primitive\\suspendprimitive::execute","icecave\\coro\\react\\eventloopengine::__construct","icecave\\coro\\react\\eventloopengine::enqueuecallback","icecave\\coro\\react\\eventloopengine::enqueuedelayedcallback","icecave\\coro\\react\\eventloopengine::eventloop","icecave\\coro\\react\\facade::eventloop","icecave\\coro\\react\\nodeadaptor::tryadapt","icecave\\coro\\react\\promiseprimitive::__construct","icecave\\coro\\react\\promiseprimitive::execute","icecave\\coro\\tree\\childnodeinterface::attach","icecave\\coro\\tree\\childnodeinterface::detach","icecave\\coro\\tree\\childnodeinterface::parent","icecave\\coro\\tree\\childnodeinterface::emitvalue","icecave\\coro\\tree\\childnodeinterface::emiterror","icecave\\coro\\tree\\childnodeinterface::emitvalueanddetach","icecave\\coro\\tree\\childnodeinterface::emiterroranddetach","icecave\\coro\\tree\\executablenodeinterface::execute","icecave\\coro\\tree\\nodeinterface::engine","icecave\\coro\\tree\\parentnodeinterface::onattach","icecave\\coro\\tree\\parentnodeinterface::ondetach","icecave\\coro\\tree\\parentnodeinterface::onvalue","icecave\\coro\\tree\\parentnodeinterface::onerror","icecave\\coro\\tree\\rootnode::__construct","icecave\\coro\\tree\\rootnode::engine","icecave\\coro\\tree\\rootnode::setengine","icecave\\coro\\tree\\rootnode::onvalue","icecave\\coro\\tree\\rootnode::onerror"],
        'info': [["Icecave","","Icecave.html","","",3],["Icecave\\Coro","","Icecave\/Coro.html","","",3],["Icecave\\Coro\\Channel","","Icecave\/Coro\/Channel.html","","",3],["Icecave\\Coro\\Channel\\Exception","","Icecave\/Coro\/Channel\/Exception.html","","",3],["Icecave\\Coro\\Coroutine","","Icecave\/Coro\/Coroutine.html","","",3],["Icecave\\Coro\\Coroutine\\Exception","","Icecave\/Coro\/Coroutine\/Exception.html","","",3],["Icecave\\Coro\\Engine","","Icecave\/Coro\/Engine.html","","",3],["Icecave\\Coro\\Primitive","","Icecave\/Coro\/Primitive.html","","",3],["Icecave\\Coro\\React","","Icecave\/Coro\/React.html","","",3],["Icecave\\Coro\\Tree","","Icecave\/Coro\/Tree.html","","",3],["BidirectionalChannelInterface","Icecave\\Coro\\Channel","Icecave\/Coro\/Channel\/BidirectionalChannelInterface.html","","",1],["Channel","Icecave\\Coro\\Channel","Icecave\/Coro\/Channel\/Channel.html","","",1],["ChannelInterface","Icecave\\Coro\\Channel","Icecave\/Coro\/Channel\/ChannelInterface.html","","",1],["ChannelClosedException","Icecave\\Coro\\Channel\\Exception","Icecave\/Coro\/Channel\/Exception\/ChannelClosedException.html"," < Exception","",1],["ChannelExceptionInterface","Icecave\\Coro\\Channel\\Exception","Icecave\/Coro\/Channel\/Exception\/ChannelExceptionInterface.html","","",1],["ReadableChannelInterface","Icecave\\Coro\\Channel","Icecave\/Coro\/Channel\/ReadableChannelInterface.html","","",1],["WritableChannelInterface","Icecave\\Coro\\Channel","Icecave\/Coro\/Channel\/WritableChannelInterface.html","","",1],["Coro","Icecave\\Coro","Icecave\/Coro\/Coro.html","","Public facade for co-routine operations.",1],["BaseResumableInterface","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/BaseResumableInterface.html","","",1],["Coroutine","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html","","",1],["CoroutineInterface","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/CoroutineInterface.html","","",1],["CoroutineStatus","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/CoroutineStatus.html"," < Enumeration","",1],["DriverInterface","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/DriverInterface.html","","Low-level driver for co-routine implementations.",1],["CancelException","Icecave\\Coro\\Coroutine\\Exception","Icecave\/Coro\/Coroutine\/Exception\/CancelException.html"," < Exception","",1],["GeneratorDriver","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/GeneratorDriver.html","","Low-level driver for co-routines based on PHP generators.",1],["ResumableInterface","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/ResumableInterface.html","","",1],["ScopedResumable","Icecave\\Coro\\Coroutine","Icecave\/Coro\/Coroutine\/ScopedResumable.html","","Wraps a resumable, and automatically cancels it if",1],["AbstractEngine","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine\/AbstractEngine.html","","Base class for engines.",1],["EngineInterface","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine\/EngineInterface.html","","A co-routine engine.",1],["Facade","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine\/Facade.html","","A helper object for use through the static Coro facade.",1],["FacadeInterface","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine\/FacadeInterface.html","","A helper object for use through the static Coro facade.",1],["FacadeOperation","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine\/FacadeOperation.html","","Abstract base class for node adaptor implementations.",1],["NodeAdaptor","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine\/NodeAdaptor.html","","Base class for node adaptor implementations.",1],["NodeAdaptorInterface","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine\/NodeAdaptorInterface.html","","Adapts arbitrary values into executable nodes.",1],["SynchronousEngine","Icecave\\Coro\\Engine","Icecave\/Coro\/Engine\/SynchronousEngine.html"," < AbstractEngine","A simple synchronous co-routine interface.",1],["PackageInfo","Icecave\\Coro","Icecave\/Coro\/PackageInfo.html","","",1],["AbstractDetachPrimitive","Icecave\\Coro\\Primitive","Icecave\/Coro\/Primitive\/AbstractDetachPrimitive.html"," < AbstractPrimitive","A primitive that detaches the parent from it's parent",1],["AbstractPrimitive","Icecave\\Coro\\Primitive","Icecave\/Coro\/Primitive\/AbstractPrimitive.html","","The base class for all primitives.",1],["CallbackPrimitive","Icecave\\Coro\\Primitive","Icecave\/Coro\/Primitive\/CallbackPrimitive.html"," < AbstractPrimitive","Invoke a callback and send the result to the parent",1],["CooperativePrimitive","Icecave\\Coro\\Primitive","Icecave\/Coro\/Primitive\/CooperativePrimitive.html"," < AbstractPrimitive","Perform a co-operative yield.",1],["DetachPrimitive","Icecave\\Coro\\Primitive","Icecave\/Coro\/Primitive\/DetachPrimitive.html"," < AbstractDetachPrimitive","A primitive that detaches the parent from it's parent",1],["DetachWithExceptionPrimitive","Icecave\\Coro\\Primitive","Icecave\/Coro\/Primitive\/DetachWithExceptionPrimitive.html"," < AbstractDetachPrimitive","A primitive that detaches the parent from it's parent",1],["SleepPrimitive","Icecave\\Coro\\Primitive","Icecave\/Coro\/Primitive\/SleepPrimitive.html"," < AbstractPrimitive","A primitive which sends null to it's parent after the",1],["SuspendPrimitive","Icecave\\Coro\\Primitive","Icecave\/Coro\/Primitive\/SuspendPrimitive.html"," < AbstractPrimitive","Suspend the parent node, and pass an object that can",1],["EventLoopEngine","Icecave\\Coro\\React","Icecave\/Coro\/React\/EventLoopEngine.html"," < AbstractEngine","A co-routine engine based on ReactPHP's event loop.",1],["Facade","Icecave\\Coro\\React","Icecave\/Coro\/React\/Facade.html"," < Facade","A helper object for use through the static Coro facade.",1],["NodeAdaptor","Icecave\\Coro\\React","Icecave\/Coro\/React\/NodeAdaptor.html"," < NodeAdaptor","Node adaptor for use with the react event loop.",1],["PromisePrimitive","Icecave\\Coro\\React","Icecave\/Coro\/React\/PromisePrimitive.html"," < AbstractPrimitive","Send a value or error to the parent node when a promise",1],["ChildNodeInterface","Icecave\\Coro\\Tree","Icecave\/Coro\/Tree\/ChildNodeInterface.html","","A node that has a parent.",1],["ExecutableNodeInterface","Icecave\\Coro\\Tree","Icecave\/Coro\/Tree\/ExecutableNodeInterface.html","","A node that has side-effects.",1],["NodeInterface","Icecave\\Coro\\Tree","Icecave\/Coro\/Tree\/NodeInterface.html","","A node that can be attached to a parent.",1],["ParentNodeInterface","Icecave\\Coro\\Tree","Icecave\/Coro\/Tree\/ParentNodeInterface.html","","A node that has children.",1],["RootNode","Icecave\\Coro\\Tree","Icecave\/Coro\/Tree\/RootNode.html","","The root node of a co-routine graph.",1],["Channel::__construct","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method___construct","()","",2],["Channel::read","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_read","()","Read from this channel.",2],["Channel::tryRead","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_tryRead","($value)","Attempt a non-blocking read from this channel.",2],["Channel::write","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_write","($value)","Write to this channel.",2],["Channel::tryWrite","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_tryWrite","($value)","Attempt a non-blocking write to this channel.",2],["Channel::close","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_close","()","Close this channel.",2],["Channel::readyToRead","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_readyToRead","()","Check if a value can be read from the channel without",2],["Channel::readyForWrite","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_readyForWrite","()","Check if a value can be written to the channel without",2],["Channel::isClosed","Icecave\\Coro\\Channel\\Channel","Icecave\/Coro\/Channel\/Channel.html#method_isClosed","()","Check if this channel is closed.",2],["ChannelInterface::close","Icecave\\Coro\\Channel\\ChannelInterface","Icecave\/Coro\/Channel\/ChannelInterface.html#method_close","()","Close this channel.",2],["ChannelInterface::isClosed","Icecave\\Coro\\Channel\\ChannelInterface","Icecave\/Coro\/Channel\/ChannelInterface.html#method_isClosed","()","Check if this channel is closed.",2],["ChannelClosedException::__construct","Icecave\\Coro\\Channel\\Exception\\ChannelClosedException","Icecave\/Coro\/Channel\/Exception\/ChannelClosedException.html#method___construct","(<a href=\"Icecave\/Coro\/Channel\/ChannelInterface.html\"><abbr title=\"Icecave\\Coro\\Channel\\ChannelInterface\">ChannelInterface<\/abbr><\/a> $channel, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["ChannelClosedException::channel","Icecave\\Coro\\Channel\\Exception\\ChannelClosedException","Icecave\/Coro\/Channel\/Exception\/ChannelClosedException.html#method_channel","()","Fetch the channel that has been closed.",2],["ChannelExceptionInterface::channel","Icecave\\Coro\\Channel\\Exception\\ChannelExceptionInterface","Icecave\/Coro\/Channel\/Exception\/ChannelExceptionInterface.html#method_channel","()","",2],["ReadableChannelInterface::read","Icecave\\Coro\\Channel\\ReadableChannelInterface","Icecave\/Coro\/Channel\/ReadableChannelInterface.html#method_read","()","Read from this channel.",2],["ReadableChannelInterface::tryRead","Icecave\\Coro\\Channel\\ReadableChannelInterface","Icecave\/Coro\/Channel\/ReadableChannelInterface.html#method_tryRead","($value)","Attempt a non-blocking read from this channel.",2],["WritableChannelInterface::write","Icecave\\Coro\\Channel\\WritableChannelInterface","Icecave\/Coro\/Channel\/WritableChannelInterface.html#method_write","($value)","Write to this channel.",2],["WritableChannelInterface::tryWrite","Icecave\\Coro\\Channel\\WritableChannelInterface","Icecave\/Coro\/Channel\/WritableChannelInterface.html#method_tryWrite","($value)","Attempt a non-blocking write to this channel.",2],["Coro::__callStatic","Icecave\\Coro\\Coro","Icecave\/Coro\/Coro.html#method___callStatic","($name, array $arguments)","Invoke a method on the current engine's facade implementation.",2],["BaseResumableInterface::resume","Icecave\\Coro\\Coroutine\\BaseResumableInterface","Icecave\/Coro\/Coroutine\/BaseResumableInterface.html#method_resume","(mixed $value = null)","Resume execution of this co-routine.",2],["BaseResumableInterface::resumeWithException","Icecave\\Coro\\Coroutine\\BaseResumableInterface","Icecave\/Coro\/Coroutine\/BaseResumableInterface.html#method_resumeWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution of this co-routine with an error.",2],["BaseResumableInterface::cancel","Icecave\\Coro\\Coroutine\\BaseResumableInterface","Icecave\/Coro\/Coroutine\/BaseResumableInterface.html#method_cancel","()","Cancel execution of a suspended co-routine.",2],["Coroutine::__construct","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method___construct","(<a href=\"Icecave\/Coro\/Coroutine\/DriverInterface.html\"><abbr title=\"Icecave\\Coro\\Coroutine\\DriverInterface\">DriverInterface<\/abbr><\/a> $driver)","",2],["Coroutine::status","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_status","()","Fetch the co-routine's current status.",2],["Coroutine::returnValue","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_returnValue","()","Fetch the value that will be sent to the parent node",2],["Coroutine::setReturnValue","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_setReturnValue","(mixed $returnValue)","Set the value that will be sent to the parent node",2],["Coroutine::execute","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_execute","()","Execute the action associated with this node.",2],["Coroutine::resume","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_resume","(mixed $value = null)","Resume execution of this co-routine.",2],["Coroutine::resumeWithException","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_resumeWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution of this co-routine with an error.",2],["Coroutine::cancel","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_cancel","()","Cancel execution of a suspended co-routine.",2],["Coroutine::onValue","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_onValue","(<a href=\"Icecave\/Coro\/Tree\/ChildNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ChildNodeInterface\">ChildNodeInterface<\/abbr><\/a> $child, mixed $value = null)","Notify the node of a value.",2],["Coroutine::onError","Icecave\\Coro\\Coroutine\\Coroutine","Icecave\/Coro\/Coroutine\/Coroutine.html#method_onError","(<a href=\"Icecave\/Coro\/Tree\/ChildNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ChildNodeInterface\">ChildNodeInterface<\/abbr><\/a> $child, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Notify the node of an error.",2],["CoroutineInterface::status","Icecave\\Coro\\Coroutine\\CoroutineInterface","Icecave\/Coro\/Coroutine\/CoroutineInterface.html#method_status","()","Fetch the co-routine's current status.",2],["CoroutineInterface::returnValue","Icecave\\Coro\\Coroutine\\CoroutineInterface","Icecave\/Coro\/Coroutine\/CoroutineInterface.html#method_returnValue","()","Fetch the value that will be sent to the parent node",2],["CoroutineInterface::setReturnValue","Icecave\\Coro\\Coroutine\\CoroutineInterface","Icecave\/Coro\/Coroutine\/CoroutineInterface.html#method_setReturnValue","(mixed $returnValue)","Set the value that will be sent to the parent node",2],["DriverInterface::fetch","Icecave\\Coro\\Coroutine\\DriverInterface","Icecave\/Coro\/Coroutine\/DriverInterface.html#method_fetch","()","Fetch the current value from the co-routine.",2],["CancelException::__construct","Icecave\\Coro\\Coroutine\\Exception\\CancelException","Icecave\/Coro\/Coroutine\/Exception\/CancelException.html#method___construct","()","",2],["GeneratorDriver::__construct","Icecave\\Coro\\Coroutine\\GeneratorDriver","Icecave\/Coro\/Coroutine\/GeneratorDriver.html#method___construct","(<a href=\"http:\/\/php.net\/Generator\"><abbr title=\"Generator\">Generator<\/abbr><\/a> $generator)","",2],["GeneratorDriver::generator","Icecave\\Coro\\Coroutine\\GeneratorDriver","Icecave\/Coro\/Coroutine\/GeneratorDriver.html#method_generator","()","Fetch the PHP generator that implements the co-routine",2],["GeneratorDriver::fetch","Icecave\\Coro\\Coroutine\\GeneratorDriver","Icecave\/Coro\/Coroutine\/GeneratorDriver.html#method_fetch","()","Fetch the current value from the co-routine.",2],["GeneratorDriver::resume","Icecave\\Coro\\Coroutine\\GeneratorDriver","Icecave\/Coro\/Coroutine\/GeneratorDriver.html#method_resume","(mixed $value = null)","Resume execution of this co-routine.",2],["GeneratorDriver::resumeWithException","Icecave\\Coro\\Coroutine\\GeneratorDriver","Icecave\/Coro\/Coroutine\/GeneratorDriver.html#method_resumeWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution of this co-routine with an error.",2],["GeneratorDriver::cancel","Icecave\\Coro\\Coroutine\\GeneratorDriver","Icecave\/Coro\/Coroutine\/GeneratorDriver.html#method_cancel","()","Cancel execution of a suspended co-routine.",2],["ScopedResumable::__construct","Icecave\\Coro\\Coroutine\\ScopedResumable","Icecave\/Coro\/Coroutine\/ScopedResumable.html#method___construct","(<a href=\"Icecave\/Coro\/Coroutine\/ResumableInterface.html\"><abbr title=\"Icecave\\Coro\\Coroutine\\ResumableInterface\">ResumableInterface<\/abbr><\/a> $resumable)","",2],["ScopedResumable::__destruct","Icecave\\Coro\\Coroutine\\ScopedResumable","Icecave\/Coro\/Coroutine\/ScopedResumable.html#method___destruct","()","",2],["ScopedResumable::resume","Icecave\\Coro\\Coroutine\\ScopedResumable","Icecave\/Coro\/Coroutine\/ScopedResumable.html#method_resume","(mixed $value = null)","Resume execution of the suspended co-routine.",2],["ScopedResumable::resumeWithException","Icecave\\Coro\\Coroutine\\ScopedResumable","Icecave\/Coro\/Coroutine\/ScopedResumable.html#method_resumeWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution of the suspended co-routine with an",2],["ScopedResumable::cancel","Icecave\\Coro\\Coroutine\\ScopedResumable","Icecave\/Coro\/Coroutine\/ScopedResumable.html#method_cancel","()","Cancel execution of a suspended co-routine.",2],["ScopedResumable::release","Icecave\\Coro\\Coroutine\\ScopedResumable","Icecave\/Coro\/Coroutine\/ScopedResumable.html#method_release","()","Release the inner resumable object.",2],["ScopedResumable::innerResumable","Icecave\\Coro\\Coroutine\\ScopedResumable","Icecave\/Coro\/Coroutine\/ScopedResumable.html#method_innerResumable","()","Fetch the inner resumable object.",2],["AbstractEngine::__construct","Icecave\\Coro\\Engine\\AbstractEngine","Icecave\/Coro\/Engine\/AbstractEngine.html#method___construct","(<a href=\"Icecave\/Coro\/Engine\/NodeAdaptorInterface.html\"><abbr title=\"Icecave\\Coro\\Engine\\NodeAdaptorInterface\">NodeAdaptorInterface<\/abbr><\/a> $nodeAdaptor, <a href=\"Icecave\/Coro\/Engine\/FacadeInterface.html\"><abbr title=\"Icecave\\Coro\\Engine\\FacadeInterface\">FacadeInterface<\/abbr><\/a> $facadeImplementation, <a href=\"Icecave\/Coro\/Tree\/RootNode.html\"><abbr title=\"Icecave\\Coro\\Tree\\RootNode\">RootNode<\/abbr><\/a> $rootNode = null)","",2],["AbstractEngine::enqueue","Icecave\\Coro\\Engine\\AbstractEngine","Icecave\/Coro\/Engine\/AbstractEngine.html#method_enqueue","(mixed $coroutine)","Enqueue a co-routine for execution.",2],["AbstractEngine::rootNode","Icecave\\Coro\\Engine\\AbstractEngine","Icecave\/Coro\/Engine\/AbstractEngine.html#method_rootNode","()","Fetch the root node of the co-routine graph.",2],["AbstractEngine::nodeAdaptor","Icecave\\Coro\\Engine\\AbstractEngine","Icecave\/Coro\/Engine\/AbstractEngine.html#method_nodeAdaptor","()","Fetch the adaptor used to convert values into co-routines.",2],["AbstractEngine::facadeImplementation","Icecave\\Coro\\Engine\\AbstractEngine","Icecave\/Coro\/Engine\/AbstractEngine.html#method_facadeImplementation","()","Fetch the object that implements the behaviour of the",2],["EngineInterface::enqueue","Icecave\\Coro\\Engine\\EngineInterface","Icecave\/Coro\/Engine\/EngineInterface.html#method_enqueue","(mixed $coroutine)","Enqueue a co-routine for execution.",2],["EngineInterface::enqueueCallback","Icecave\\Coro\\Engine\\EngineInterface","Icecave\/Coro\/Engine\/EngineInterface.html#method_enqueueCallback","(<abbr title=\"Icecave\\Coro\\Engine\\callable\">callable<\/abbr> $callback, array $arguments = array())","Enqueue a callback for execution.",2],["EngineInterface::enqueueDelayedCallback","Icecave\\Coro\\Engine\\EngineInterface","Icecave\/Coro\/Engine\/EngineInterface.html#method_enqueueDelayedCallback","(<abbr title=\"Icecave\\Coro\\Engine\\number\">number<\/abbr> $delay, <abbr title=\"Icecave\\Coro\\Engine\\callable\">callable<\/abbr> $callback, array $arguments = array())","Enqueue a callback for execution after a given timeout.",2],["EngineInterface::rootNode","Icecave\\Coro\\Engine\\EngineInterface","Icecave\/Coro\/Engine\/EngineInterface.html#method_rootNode","()","Fetch the root node of the co-routine graph.",2],["EngineInterface::nodeAdaptor","Icecave\\Coro\\Engine\\EngineInterface","Icecave\/Coro\/Engine\/EngineInterface.html#method_nodeAdaptor","()","Fetch the adaptor used to convert values into co-routines.",2],["EngineInterface::facadeImplementation","Icecave\\Coro\\Engine\\EngineInterface","Icecave\/Coro\/Engine\/EngineInterface.html#method_facadeImplementation","()","Fetch the object that implements the behaviour of the",2],["Facade::__construct","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method___construct","()","",2],["Facade::get","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_get","()","Get the currently executing co-routine.",2],["Facade::result","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_result","($value)","Set the value that will be sent to the parent co-routine",2],["Facade::enqueue","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_enqueue","(mixed $coroutine)","Enqueue a co-routine for execution.",2],["Facade::enqueueCallback","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_enqueueCallback","(<abbr title=\"Icecave\\Coro\\Engine\\callable\">callable<\/abbr> $callback, array $arguments = array())","Enqueue a callback for execution.",2],["Facade::engine","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_engine","()","Fetch the engine on which the current co-routine is",2],["Facade::sleep","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_sleep","($timeout)","Suspend execution for a specified period of time.",2],["Facade::suspend","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_suspend","(<abbr title=\"Icecave\\Coro\\Engine\\callable\">callable<\/abbr> $callback)","Suspend the current co-routine.",2],["Facade::detach","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_detach","($value = null)","Return a value to the calling co-routine and continue",2],["Facade::detachWithException","Icecave\\Coro\\Engine\\Facade","Icecave\/Coro\/Engine\/Facade.html#method_detachWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Throw an exception to the calling co-routine and continue",2],["FacadeInterface::get","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_get","()","Get the currently executing co-routine.",2],["FacadeInterface::result","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_result","($value)","Set the value that will be sent to the parent co-routine",2],["FacadeInterface::enqueue","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_enqueue","(mixed $coroutine)","Enqueue a co-routine for execution.",2],["FacadeInterface::enqueueCallback","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_enqueueCallback","(<abbr title=\"Icecave\\Coro\\Engine\\callable\">callable<\/abbr> $callback, array $arguments = array())","Enqueue a callback for execution.",2],["FacadeInterface::engine","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_engine","()","Fetch the engine on which the current co-routine is",2],["FacadeInterface::sleep","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_sleep","($timeout)","Suspend execution for a specified period of time.",2],["FacadeInterface::suspend","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_suspend","(<abbr title=\"Icecave\\Coro\\Engine\\callable\">callable<\/abbr> $callback)","Suspend the current co-routine.",2],["FacadeInterface::detach","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_detach","($value = null)","Return a value to the calling co-routine and continue",2],["FacadeInterface::detachWithException","Icecave\\Coro\\Engine\\FacadeInterface","Icecave\/Coro\/Engine\/FacadeInterface.html#method_detachWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Throw an exception to the calling co-routine and continue",2],["FacadeOperation::__construct","Icecave\\Coro\\Engine\\FacadeOperation","Icecave\/Coro\/Engine\/FacadeOperation.html#method___construct","(string $name, array $arguments)","",2],["FacadeOperation::execute","Icecave\\Coro\\Engine\\FacadeOperation","Icecave\/Coro\/Engine\/FacadeOperation.html#method_execute","()","Execute the action associated with this node.",2],["NodeAdaptor::__construct","Icecave\\Coro\\Engine\\NodeAdaptor","Icecave\/Coro\/Engine\/NodeAdaptor.html#method___construct","()","",2],["NodeAdaptor::adapt","Icecave\\Coro\\Engine\\NodeAdaptor","Icecave\/Coro\/Engine\/NodeAdaptor.html#method_adapt","(mixed $value)","Adapt a value into a node.",2],["NodeAdaptor::tryAdapt","Icecave\\Coro\\Engine\\NodeAdaptor","Icecave\/Coro\/Engine\/NodeAdaptor.html#method_tryAdapt","(mixed $value)","Attempt to adapt a value into a node.",2],["NodeAdaptorInterface::adapt","Icecave\\Coro\\Engine\\NodeAdaptorInterface","Icecave\/Coro\/Engine\/NodeAdaptorInterface.html#method_adapt","(mixed $value)","Adapt a value into a node.",2],["NodeAdaptorInterface::tryAdapt","Icecave\\Coro\\Engine\\NodeAdaptorInterface","Icecave\/Coro\/Engine\/NodeAdaptorInterface.html#method_tryAdapt","(mixed $value)","Attempt to adapt a value into a node.",2],["SynchronousEngine::__construct","Icecave\\Coro\\Engine\\SynchronousEngine","Icecave\/Coro\/Engine\/SynchronousEngine.html#method___construct","(<a href=\"Icecave\/Coro\/Engine\/NodeAdaptorInterface.html\"><abbr title=\"Icecave\\Coro\\Engine\\NodeAdaptorInterface\">NodeAdaptorInterface<\/abbr><\/a> $nodeAdaptor = null, <a href=\"Icecave\/Coro\/Engine\/FacadeInterface.html\"><abbr title=\"Icecave\\Coro\\Engine\\FacadeInterface\">FacadeInterface<\/abbr><\/a> $facadeImplementation = null, <a href=\"Icecave\/Coro\/Tree\/RootNode.html\"><abbr title=\"Icecave\\Coro\\Tree\\RootNode\">RootNode<\/abbr><\/a> $rootNode = null)","",2],["SynchronousEngine::enqueueCallback","Icecave\\Coro\\Engine\\SynchronousEngine","Icecave\/Coro\/Engine\/SynchronousEngine.html#method_enqueueCallback","(<abbr title=\"Icecave\\Coro\\Engine\\callable\">callable<\/abbr> $callback, array $arguments = array())","Enqueue a callback for execution.",2],["SynchronousEngine::enqueueDelayedCallback","Icecave\\Coro\\Engine\\SynchronousEngine","Icecave\/Coro\/Engine\/SynchronousEngine.html#method_enqueueDelayedCallback","(<abbr title=\"Icecave\\Coro\\Engine\\number\">number<\/abbr> $delay, <abbr title=\"Icecave\\Coro\\Engine\\callable\">callable<\/abbr> $callback, array $arguments = array())","Enqueue a callback for execution after a given timeout.",2],["SynchronousEngine::run","Icecave\\Coro\\Engine\\SynchronousEngine","Icecave\/Coro\/Engine\/SynchronousEngine.html#method_run","()","Run the engine.",2],["AbstractDetachPrimitive::__construct","Icecave\\Coro\\Primitive\\AbstractDetachPrimitive","Icecave\/Coro\/Primitive\/AbstractDetachPrimitive.html#method___construct","(mixed $value)","",2],["AbstractDetachPrimitive::execute","Icecave\\Coro\\Primitive\\AbstractDetachPrimitive","Icecave\/Coro\/Primitive\/AbstractDetachPrimitive.html#method_execute","()","Execute the action associated with this node.",2],["CallbackPrimitive::__construct","Icecave\\Coro\\Primitive\\CallbackPrimitive","Icecave\/Coro\/Primitive\/CallbackPrimitive.html#method___construct","(<abbr title=\"Icecave\\Coro\\Primitive\\callable\">callable<\/abbr> $callback)","",2],["CallbackPrimitive::execute","Icecave\\Coro\\Primitive\\CallbackPrimitive","Icecave\/Coro\/Primitive\/CallbackPrimitive.html#method_execute","()","Execute the action associated with this node.",2],["CooperativePrimitive::execute","Icecave\\Coro\\Primitive\\CooperativePrimitive","Icecave\/Coro\/Primitive\/CooperativePrimitive.html#method_execute","()","Execute the action associated with this node.",2],["SleepPrimitive::__construct","Icecave\\Coro\\Primitive\\SleepPrimitive","Icecave\/Coro\/Primitive\/SleepPrimitive.html#method___construct","(<abbr title=\"Icecave\\Coro\\Primitive\\number\">number<\/abbr> $duration)","",2],["SleepPrimitive::execute","Icecave\\Coro\\Primitive\\SleepPrimitive","Icecave\/Coro\/Primitive\/SleepPrimitive.html#method_execute","()","Execute the action associated with this node.",2],["SuspendPrimitive::__construct","Icecave\\Coro\\Primitive\\SuspendPrimitive","Icecave\/Coro\/Primitive\/SuspendPrimitive.html#method___construct","(<abbr title=\"Icecave\\Coro\\Primitive\\callable\">callable<\/abbr> $callback)","",2],["SuspendPrimitive::execute","Icecave\\Coro\\Primitive\\SuspendPrimitive","Icecave\/Coro\/Primitive\/SuspendPrimitive.html#method_execute","()","Execute the action associated with this node.",2],["EventLoopEngine::__construct","Icecave\\Coro\\React\\EventLoopEngine","Icecave\/Coro\/React\/EventLoopEngine.html#method___construct","(<abbr title=\"React\\EventLoop\\LoopInterface\">LoopInterface<\/abbr> $eventLoop = null, <a href=\"Icecave\/Coro\/Engine\/NodeAdaptorInterface.html\"><abbr title=\"Icecave\\Coro\\Engine\\NodeAdaptorInterface\">NodeAdaptorInterface<\/abbr><\/a> $nodeAdaptor = null, <a href=\"Icecave\/Coro\/Engine\/FacadeInterface.html\"><abbr title=\"Icecave\\Coro\\Engine\\FacadeInterface\">FacadeInterface<\/abbr><\/a> $facadeImplementation = null, <a href=\"Icecave\/Coro\/Tree\/RootNode.html\"><abbr title=\"Icecave\\Coro\\Tree\\RootNode\">RootNode<\/abbr><\/a> $rootNode = null)","",2],["EventLoopEngine::enqueueCallback","Icecave\\Coro\\React\\EventLoopEngine","Icecave\/Coro\/React\/EventLoopEngine.html#method_enqueueCallback","(<abbr title=\"Icecave\\Coro\\React\\callable\">callable<\/abbr> $callback, array $arguments = array())","Enqueue a callback for execution.",2],["EventLoopEngine::enqueueDelayedCallback","Icecave\\Coro\\React\\EventLoopEngine","Icecave\/Coro\/React\/EventLoopEngine.html#method_enqueueDelayedCallback","(<abbr title=\"Icecave\\Coro\\React\\number\">number<\/abbr> $delay, <abbr title=\"Icecave\\Coro\\React\\callable\">callable<\/abbr> $callback, array $arguments = array())","Enqueue a callback for execution after a given timeout.",2],["EventLoopEngine::eventLoop","Icecave\\Coro\\React\\EventLoopEngine","Icecave\/Coro\/React\/EventLoopEngine.html#method_eventLoop","()","Fetch the ReactPHP event loop to used by the engine",2],["Facade::eventLoop","Icecave\\Coro\\React\\Facade","Icecave\/Coro\/React\/Facade.html#method_eventLoop","()","Get the ReactPHP event loop on which the current engine",2],["NodeAdaptor::tryAdapt","Icecave\\Coro\\React\\NodeAdaptor","Icecave\/Coro\/React\/NodeAdaptor.html#method_tryAdapt","(mixed $value)","Attempt to adapt a value into a node.",2],["PromisePrimitive::__construct","Icecave\\Coro\\React\\PromisePrimitive","Icecave\/Coro\/React\/PromisePrimitive.html#method___construct","(<abbr title=\"React\\Promise\\PromiseInterface\">PromiseInterface<\/abbr> $promise, <abbr title=\"Icecave\\Coro\\React\\callable\">callable<\/abbr> $progressCallback = null)","",2],["PromisePrimitive::execute","Icecave\\Coro\\React\\PromisePrimitive","Icecave\/Coro\/React\/PromisePrimitive.html#method_execute","()","Execute the action associated with this node.",2],["ChildNodeInterface::attach","Icecave\\Coro\\Tree\\ChildNodeInterface","Icecave\/Coro\/Tree\/ChildNodeInterface.html#method_attach","(<a href=\"Icecave\/Coro\/Tree\/ParentNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ParentNodeInterface\">ParentNodeInterface<\/abbr><\/a> $parent)","Attach this node to a parent.",2],["ChildNodeInterface::detach","Icecave\\Coro\\Tree\\ChildNodeInterface","Icecave\/Coro\/Tree\/ChildNodeInterface.html#method_detach","()","Detach this node from its parent.",2],["ChildNodeInterface::parent","Icecave\\Coro\\Tree\\ChildNodeInterface","Icecave\/Coro\/Tree\/ChildNodeInterface.html#method_parent","()","Fetch the parent of this node.",2],["ChildNodeInterface::emitValue","Icecave\\Coro\\Tree\\ChildNodeInterface","Icecave\/Coro\/Tree\/ChildNodeInterface.html#method_emitValue","(mixed $value = null)","Send this node's parent a value.",2],["ChildNodeInterface::emitError","Icecave\\Coro\\Tree\\ChildNodeInterface","Icecave\/Coro\/Tree\/ChildNodeInterface.html#method_emitError","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Send this node's parent an error.",2],["ChildNodeInterface::emitValueAndDetach","Icecave\\Coro\\Tree\\ChildNodeInterface","Icecave\/Coro\/Tree\/ChildNodeInterface.html#method_emitValueAndDetach","(mixed $value = null)","Send this node's parent a value.",2],["ChildNodeInterface::emitErrorAndDetach","Icecave\\Coro\\Tree\\ChildNodeInterface","Icecave\/Coro\/Tree\/ChildNodeInterface.html#method_emitErrorAndDetach","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Send this node's parent an error.",2],["ExecutableNodeInterface::execute","Icecave\\Coro\\Tree\\ExecutableNodeInterface","Icecave\/Coro\/Tree\/ExecutableNodeInterface.html#method_execute","()","Execute the action associated with this node.",2],["NodeInterface::engine","Icecave\\Coro\\Tree\\NodeInterface","Icecave\/Coro\/Tree\/NodeInterface.html#method_engine","()","Fetch the engine on which this node is executing.",2],["ParentNodeInterface::onAttach","Icecave\\Coro\\Tree\\ParentNodeInterface","Icecave\/Coro\/Tree\/ParentNodeInterface.html#method_onAttach","(<a href=\"Icecave\/Coro\/Tree\/ChildNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ChildNodeInterface\">ChildNodeInterface<\/abbr><\/a> $child)","Notify the node that a child has been attached.",2],["ParentNodeInterface::onDetach","Icecave\\Coro\\Tree\\ParentNodeInterface","Icecave\/Coro\/Tree\/ParentNodeInterface.html#method_onDetach","(<a href=\"Icecave\/Coro\/Tree\/ChildNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ChildNodeInterface\">ChildNodeInterface<\/abbr><\/a> $child)","Notify the node that a child has been detached.",2],["ParentNodeInterface::onValue","Icecave\\Coro\\Tree\\ParentNodeInterface","Icecave\/Coro\/Tree\/ParentNodeInterface.html#method_onValue","(<a href=\"Icecave\/Coro\/Tree\/ChildNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ChildNodeInterface\">ChildNodeInterface<\/abbr><\/a> $child, mixed $value = null)","Notify the node of a value.",2],["ParentNodeInterface::onError","Icecave\\Coro\\Tree\\ParentNodeInterface","Icecave\/Coro\/Tree\/ParentNodeInterface.html#method_onError","(<a href=\"Icecave\/Coro\/Tree\/ChildNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ChildNodeInterface\">ChildNodeInterface<\/abbr><\/a> $child, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Notify the node of an error.",2],["RootNode::__construct","Icecave\\Coro\\Tree\\RootNode","Icecave\/Coro\/Tree\/RootNode.html#method___construct","()","",2],["RootNode::engine","Icecave\\Coro\\Tree\\RootNode","Icecave\/Coro\/Tree\/RootNode.html#method_engine","()","Fetch the engine on which this node is executing.",2],["RootNode::setEngine","Icecave\\Coro\\Tree\\RootNode","Icecave\/Coro\/Tree\/RootNode.html#method_setEngine","(<a href=\"Icecave\/Coro\/Engine\/EngineInterface.html\"><abbr title=\"Icecave\\Coro\\Engine\\EngineInterface\">EngineInterface<\/abbr><\/a> $engine)","Set the engine on which this node is executing.",2],["RootNode::onValue","Icecave\\Coro\\Tree\\RootNode","Icecave\/Coro\/Tree\/RootNode.html#method_onValue","(<a href=\"Icecave\/Coro\/Tree\/ChildNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ChildNodeInterface\">ChildNodeInterface<\/abbr><\/a> $child, mixed $value = null)","Notify the node of a value.",2],["RootNode::onError","Icecave\\Coro\\Tree\\RootNode","Icecave\/Coro\/Tree\/RootNode.html#method_onError","(<a href=\"Icecave\/Coro\/Tree\/ChildNodeInterface.html\"><abbr title=\"Icecave\\Coro\\Tree\\ChildNodeInterface\">ChildNodeInterface<\/abbr><\/a> $child, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Notify the node of an error.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']