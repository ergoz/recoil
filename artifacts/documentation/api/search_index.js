var search_data = {
    'index': {
        'searchIndex': ["icecave","icecave\\recoil","icecave\\recoil\\channel","icecave\\recoil\\channel\\exception","icecave\\recoil\\channel\\serialization","icecave\\recoil\\coroutine","icecave\\recoil\\coroutine\\exception","icecave\\recoil\\kernel","icecave\\recoil\\kernel\\api","icecave\\recoil\\kernel\\exception","icecave\\recoil\\kernel\\strand","icecave\\recoil\\stream","icecave\\recoil\\stream\\exception","icecave\\recoil\\channel\\bidirectionalchanneladaptor","icecave\\recoil\\channel\\bidirectionalchannelinterface","icecave\\recoil\\channel\\channel","icecave\\recoil\\channel\\exception\\channelclosedexception","icecave\\recoil\\channel\\exception\\channellockedexception","icecave\\recoil\\channel\\queuechannel","icecave\\recoil\\channel\\readablechannelinterface","icecave\\recoil\\channel\\readablestreamchannel","icecave\\recoil\\channel\\serialization\\phpserializer","icecave\\recoil\\channel\\serialization\\phpunserializer","icecave\\recoil\\channel\\serialization\\serializerinterface","icecave\\recoil\\channel\\serialization\\unserializerinterface","icecave\\recoil\\channel\\writablechannelinterface","icecave\\recoil\\channel\\writablestreamchannel","icecave\\recoil\\coroutine\\abstractcoroutine","icecave\\recoil\\coroutine\\coroutineadaptor","icecave\\recoil\\coroutine\\coroutineadaptorinterface","icecave\\recoil\\coroutine\\coroutineinterface","icecave\\recoil\\coroutine\\coroutineproviderinterface","icecave\\recoil\\coroutine\\exception\\promiserejectedexception","icecave\\recoil\\coroutine\\generatorcoroutine","icecave\\recoil\\coroutine\\promisecoroutine","icecave\\recoil\\kernel\\api\\kernelapi","icecave\\recoil\\kernel\\api\\kernelapicall","icecave\\recoil\\kernel\\api\\kernelapiinterface","icecave\\recoil\\kernel\\api\\select","icecave\\recoil\\kernel\\api\\sleep","icecave\\recoil\\kernel\\api\\timeout","icecave\\recoil\\kernel\\exception\\strandterminatedexception","icecave\\recoil\\kernel\\exception\\timeoutexception","icecave\\recoil\\kernel\\kernel","icecave\\recoil\\kernel\\kernelinterface","icecave\\recoil\\kernel\\strand\\stackbase","icecave\\recoil\\kernel\\strand\\strand","icecave\\recoil\\kernel\\strand\\strandfactory","icecave\\recoil\\kernel\\strand\\strandfactoryinterface","icecave\\recoil\\kernel\\strand\\strandinterface","icecave\\recoil\\packageinfo","icecave\\recoil\\recoil","icecave\\recoil\\stream\\bidirectionalstreamadaptor","icecave\\recoil\\stream\\bidirectionalstreaminterface","icecave\\recoil\\stream\\exception\\streamclosedexception","icecave\\recoil\\stream\\exception\\streamlockedexception","icecave\\recoil\\stream\\exception\\streamreadexception","icecave\\recoil\\stream\\exception\\streamwriteexception","icecave\\recoil\\stream\\readablereactstream","icecave\\recoil\\stream\\readablestream","icecave\\recoil\\stream\\readablestreaminterface","icecave\\recoil\\stream\\writablereactstream","icecave\\recoil\\stream\\writablestream","icecave\\recoil\\stream\\writablestreaminterface","icecave\\recoil\\channel\\bidirectionalchanneladaptor::__construct","icecave\\recoil\\channel\\bidirectionalchanneladaptor::read","icecave\\recoil\\channel\\bidirectionalchanneladaptor::write","icecave\\recoil\\channel\\bidirectionalchanneladaptor::close","icecave\\recoil\\channel\\bidirectionalchanneladaptor::isclosed","icecave\\recoil\\channel\\channel::__construct","icecave\\recoil\\channel\\channel::read","icecave\\recoil\\channel\\channel::write","icecave\\recoil\\channel\\channel::close","icecave\\recoil\\channel\\channel::isclosed","icecave\\recoil\\channel\\exception\\channelclosedexception::__construct","icecave\\recoil\\channel\\exception\\channellockedexception::__construct","icecave\\recoil\\channel\\queuechannel::__construct","icecave\\recoil\\channel\\queuechannel::read","icecave\\recoil\\channel\\queuechannel::write","icecave\\recoil\\channel\\queuechannel::close","icecave\\recoil\\channel\\queuechannel::isclosed","icecave\\recoil\\channel\\readablechannelinterface::read","icecave\\recoil\\channel\\readablechannelinterface::close","icecave\\recoil\\channel\\readablechannelinterface::isclosed","icecave\\recoil\\channel\\readablestreamchannel::__construct","icecave\\recoil\\channel\\readablestreamchannel::read","icecave\\recoil\\channel\\readablestreamchannel::close","icecave\\recoil\\channel\\readablestreamchannel::isclosed","icecave\\recoil\\channel\\serialization\\phpserializer::serialize","icecave\\recoil\\channel\\serialization\\phpunserializer::__construct","icecave\\recoil\\channel\\serialization\\phpunserializer::feed","icecave\\recoil\\channel\\serialization\\phpunserializer::hasvalue","icecave\\recoil\\channel\\serialization\\phpunserializer::unserialize","icecave\\recoil\\channel\\serialization\\phpunserializer::finalize","icecave\\recoil\\channel\\serialization\\serializerinterface::serialize","icecave\\recoil\\channel\\serialization\\unserializerinterface::feed","icecave\\recoil\\channel\\serialization\\unserializerinterface::hasvalue","icecave\\recoil\\channel\\serialization\\unserializerinterface::unserialize","icecave\\recoil\\channel\\serialization\\unserializerinterface::finalize","icecave\\recoil\\channel\\writablechannelinterface::write","icecave\\recoil\\channel\\writablechannelinterface::close","icecave\\recoil\\channel\\writablechannelinterface::isclosed","icecave\\recoil\\channel\\writablestreamchannel::__construct","icecave\\recoil\\channel\\writablestreamchannel::write","icecave\\recoil\\channel\\writablestreamchannel::close","icecave\\recoil\\channel\\writablestreamchannel::isclosed","icecave\\recoil\\coroutine\\abstractcoroutine::__construct","icecave\\recoil\\coroutine\\abstractcoroutine::call","icecave\\recoil\\coroutine\\abstractcoroutine::resumewithvalue","icecave\\recoil\\coroutine\\abstractcoroutine::resumewithexception","icecave\\recoil\\coroutine\\abstractcoroutine::terminate","icecave\\recoil\\coroutine\\abstractcoroutine::tick","icecave\\recoil\\coroutine\\abstractcoroutine::sendonnexttick","icecave\\recoil\\coroutine\\abstractcoroutine::throwonnexttick","icecave\\recoil\\coroutine\\abstractcoroutine::terminateonnexttick","icecave\\recoil\\coroutine\\coroutineadaptor::adapt","icecave\\recoil\\coroutine\\coroutineadaptorinterface::adapt","icecave\\recoil\\coroutine\\coroutineinterface::tick","icecave\\recoil\\coroutine\\coroutineinterface::sendonnexttick","icecave\\recoil\\coroutine\\coroutineinterface::throwonnexttick","icecave\\recoil\\coroutine\\coroutineinterface::terminateonnexttick","icecave\\recoil\\coroutine\\coroutineproviderinterface::coroutine","icecave\\recoil\\coroutine\\exception\\promiserejectedexception::__construct","icecave\\recoil\\coroutine\\exception\\promiserejectedexception::reason","icecave\\recoil\\coroutine\\generatorcoroutine::__construct","icecave\\recoil\\coroutine\\generatorcoroutine::call","icecave\\recoil\\coroutine\\generatorcoroutine::resumewithvalue","icecave\\recoil\\coroutine\\generatorcoroutine::resumewithexception","icecave\\recoil\\coroutine\\generatorcoroutine::terminate","icecave\\recoil\\coroutine\\promisecoroutine::__construct","icecave\\recoil\\coroutine\\promisecoroutine::promise","icecave\\recoil\\coroutine\\promisecoroutine::call","icecave\\recoil\\coroutine\\promisecoroutine::resumewithvalue","icecave\\recoil\\coroutine\\promisecoroutine::resumewithexception","icecave\\recoil\\coroutine\\promisecoroutine::terminate","icecave\\recoil\\kernel\\api\\kernelapi::strand","icecave\\recoil\\kernel\\api\\kernelapi::kernel","icecave\\recoil\\kernel\\api\\kernelapi::eventloop","icecave\\recoil\\kernel\\api\\kernelapi::return_","icecave\\recoil\\kernel\\api\\kernelapi::throw_","icecave\\recoil\\kernel\\api\\kernelapi::terminate","icecave\\recoil\\kernel\\api\\kernelapi::sleep","icecave\\recoil\\kernel\\api\\kernelapi::suspend","icecave\\recoil\\kernel\\api\\kernelapi::timeout","icecave\\recoil\\kernel\\api\\kernelapi::cooperate","icecave\\recoil\\kernel\\api\\kernelapi::noop","icecave\\recoil\\kernel\\api\\kernelapi::execute","icecave\\recoil\\kernel\\api\\kernelapi::stop","icecave\\recoil\\kernel\\api\\kernelapi::select","icecave\\recoil\\kernel\\api\\kernelapicall::__construct","icecave\\recoil\\kernel\\api\\kernelapicall::name","icecave\\recoil\\kernel\\api\\kernelapicall::arguments","icecave\\recoil\\kernel\\api\\kernelapicall::tick","icecave\\recoil\\kernel\\api\\kernelapicall::sendonnexttick","icecave\\recoil\\kernel\\api\\kernelapicall::throwonnexttick","icecave\\recoil\\kernel\\api\\kernelapicall::terminateonnexttick","icecave\\recoil\\kernel\\api\\kernelapiinterface::strand","icecave\\recoil\\kernel\\api\\kernelapiinterface::kernel","icecave\\recoil\\kernel\\api\\kernelapiinterface::eventloop","icecave\\recoil\\kernel\\api\\kernelapiinterface::return_","icecave\\recoil\\kernel\\api\\kernelapiinterface::throw_","icecave\\recoil\\kernel\\api\\kernelapiinterface::terminate","icecave\\recoil\\kernel\\api\\kernelapiinterface::sleep","icecave\\recoil\\kernel\\api\\kernelapiinterface::suspend","icecave\\recoil\\kernel\\api\\kernelapiinterface::timeout","icecave\\recoil\\kernel\\api\\kernelapiinterface::noop","icecave\\recoil\\kernel\\api\\kernelapiinterface::cooperate","icecave\\recoil\\kernel\\api\\kernelapiinterface::execute","icecave\\recoil\\kernel\\api\\kernelapiinterface::stop","icecave\\recoil\\kernel\\api\\kernelapiinterface::select","icecave\\recoil\\kernel\\api\\select::__construct","icecave\\recoil\\kernel\\api\\select::call","icecave\\recoil\\kernel\\api\\select::resumewithvalue","icecave\\recoil\\kernel\\api\\select::resumewithexception","icecave\\recoil\\kernel\\api\\select::terminate","icecave\\recoil\\kernel\\api\\select::scheduleresume","icecave\\recoil\\kernel\\api\\sleep::__construct","icecave\\recoil\\kernel\\api\\sleep::call","icecave\\recoil\\kernel\\api\\sleep::resumewithvalue","icecave\\recoil\\kernel\\api\\sleep::resumewithexception","icecave\\recoil\\kernel\\api\\sleep::terminate","icecave\\recoil\\kernel\\api\\timeout::__construct","icecave\\recoil\\kernel\\api\\timeout::call","icecave\\recoil\\kernel\\api\\timeout::resumewithvalue","icecave\\recoil\\kernel\\api\\timeout::resumewithexception","icecave\\recoil\\kernel\\api\\timeout::terminate","icecave\\recoil\\kernel\\exception\\strandterminatedexception::__construct","icecave\\recoil\\kernel\\exception\\timeoutexception::__construct","icecave\\recoil\\kernel\\kernel::__construct","icecave\\recoil\\kernel\\kernel::execute","icecave\\recoil\\kernel\\kernel::attachstrand","icecave\\recoil\\kernel\\kernel::detachstrand","icecave\\recoil\\kernel\\kernel::api","icecave\\recoil\\kernel\\kernel::coroutineadaptor","icecave\\recoil\\kernel\\kernel::strandfactory","icecave\\recoil\\kernel\\kernel::eventloop","icecave\\recoil\\kernel\\kernel::stop","icecave\\recoil\\kernel\\kernelinterface::execute","icecave\\recoil\\kernel\\kernelinterface::attachstrand","icecave\\recoil\\kernel\\kernelinterface::detachstrand","icecave\\recoil\\kernel\\kernelinterface::api","icecave\\recoil\\kernel\\kernelinterface::coroutineadaptor","icecave\\recoil\\kernel\\kernelinterface::strandfactory","icecave\\recoil\\kernel\\kernelinterface::eventloop","icecave\\recoil\\kernel\\kernelinterface::stop","icecave\\recoil\\kernel\\strand\\stackbase::call","icecave\\recoil\\kernel\\strand\\stackbase::resumewithvalue","icecave\\recoil\\kernel\\strand\\stackbase::resumewithexception","icecave\\recoil\\kernel\\strand\\stackbase::terminate","icecave\\recoil\\kernel\\strand\\strand::__construct","icecave\\recoil\\kernel\\strand\\strand::kernel","icecave\\recoil\\kernel\\strand\\strand::current","icecave\\recoil\\kernel\\strand\\strand::push","icecave\\recoil\\kernel\\strand\\strand::pop","icecave\\recoil\\kernel\\strand\\strand::call","icecave\\recoil\\kernel\\strand\\strand::returnvalue","icecave\\recoil\\kernel\\strand\\strand::throwexception","icecave\\recoil\\kernel\\strand\\strand::suspend","icecave\\recoil\\kernel\\strand\\strand::resume","icecave\\recoil\\kernel\\strand\\strand::resumewithvalue","icecave\\recoil\\kernel\\strand\\strand::resumewithexception","icecave\\recoil\\kernel\\strand\\strand::terminate","icecave\\recoil\\kernel\\strand\\strand::hasexited","icecave\\recoil\\kernel\\strand\\strand::tick","icecave\\recoil\\kernel\\strand\\strandfactory::createstrand","icecave\\recoil\\kernel\\strand\\strandfactoryinterface::createstrand","icecave\\recoil\\kernel\\strand\\strandinterface::kernel","icecave\\recoil\\kernel\\strand\\strandinterface::current","icecave\\recoil\\kernel\\strand\\strandinterface::push","icecave\\recoil\\kernel\\strand\\strandinterface::pop","icecave\\recoil\\kernel\\strand\\strandinterface::call","icecave\\recoil\\kernel\\strand\\strandinterface::returnvalue","icecave\\recoil\\kernel\\strand\\strandinterface::throwexception","icecave\\recoil\\kernel\\strand\\strandinterface::suspend","icecave\\recoil\\kernel\\strand\\strandinterface::resume","icecave\\recoil\\kernel\\strand\\strandinterface::resumewithvalue","icecave\\recoil\\kernel\\strand\\strandinterface::resumewithexception","icecave\\recoil\\kernel\\strand\\strandinterface::terminate","icecave\\recoil\\kernel\\strand\\strandinterface::hasexited","icecave\\recoil\\kernel\\strand\\strandinterface::tick","icecave\\recoil\\recoil::__callstatic","icecave\\recoil\\recoil::run","icecave\\recoil\\stream\\bidirectionalstreamadaptor::__construct","icecave\\recoil\\stream\\bidirectionalstreamadaptor::read","icecave\\recoil\\stream\\bidirectionalstreamadaptor::write","icecave\\recoil\\stream\\bidirectionalstreamadaptor::writeall","icecave\\recoil\\stream\\bidirectionalstreamadaptor::close","icecave\\recoil\\stream\\bidirectionalstreamadaptor::isclosed","icecave\\recoil\\stream\\exception\\streamclosedexception::__construct","icecave\\recoil\\stream\\exception\\streamlockedexception::__construct","icecave\\recoil\\stream\\exception\\streamreadexception::__construct","icecave\\recoil\\stream\\exception\\streamwriteexception::__construct","icecave\\recoil\\stream\\readablereactstream::__construct","icecave\\recoil\\stream\\readablereactstream::read","icecave\\recoil\\stream\\readablereactstream::close","icecave\\recoil\\stream\\readablereactstream::isclosed","icecave\\recoil\\stream\\readablereactstream::onstreamdata","icecave\\recoil\\stream\\readablereactstream::onstreamend","icecave\\recoil\\stream\\readablereactstream::onstreamclose","icecave\\recoil\\stream\\readablereactstream::onstreamerror","icecave\\recoil\\stream\\readablestream::__construct","icecave\\recoil\\stream\\readablestream::read","icecave\\recoil\\stream\\readablestream::close","icecave\\recoil\\stream\\readablestream::isclosed","icecave\\recoil\\stream\\readablestreaminterface::read","icecave\\recoil\\stream\\readablestreaminterface::close","icecave\\recoil\\stream\\readablestreaminterface::isclosed","icecave\\recoil\\stream\\writablereactstream::__construct","icecave\\recoil\\stream\\writablereactstream::write","icecave\\recoil\\stream\\writablereactstream::writeall","icecave\\recoil\\stream\\writablereactstream::close","icecave\\recoil\\stream\\writablereactstream::isclosed","icecave\\recoil\\stream\\writablereactstream::onstreamdrain","icecave\\recoil\\stream\\writablereactstream::onstreamerror","icecave\\recoil\\stream\\writablestream::__construct","icecave\\recoil\\stream\\writablestream::write","icecave\\recoil\\stream\\writablestream::writeall","icecave\\recoil\\stream\\writablestream::close","icecave\\recoil\\stream\\writablestream::isclosed","icecave\\recoil\\stream\\writablestreaminterface::write","icecave\\recoil\\stream\\writablestreaminterface::writeall","icecave\\recoil\\stream\\writablestreaminterface::close","icecave\\recoil\\stream\\writablestreaminterface::isclosed"],
        'info': [["Icecave","","Icecave.html","","",3],["Icecave\\Recoil","","Icecave\/Recoil.html","","",3],["Icecave\\Recoil\\Channel","","Icecave\/Recoil\/Channel.html","","",3],["Icecave\\Recoil\\Channel\\Exception","","Icecave\/Recoil\/Channel\/Exception.html","","",3],["Icecave\\Recoil\\Channel\\Serialization","","Icecave\/Recoil\/Channel\/Serialization.html","","",3],["Icecave\\Recoil\\Coroutine","","Icecave\/Recoil\/Coroutine.html","","",3],["Icecave\\Recoil\\Coroutine\\Exception","","Icecave\/Recoil\/Coroutine\/Exception.html","","",3],["Icecave\\Recoil\\Kernel","","Icecave\/Recoil\/Kernel.html","","",3],["Icecave\\Recoil\\Kernel\\Api","","Icecave\/Recoil\/Kernel\/Api.html","","",3],["Icecave\\Recoil\\Kernel\\Exception","","Icecave\/Recoil\/Kernel\/Exception.html","","",3],["Icecave\\Recoil\\Kernel\\Strand","","Icecave\/Recoil\/Kernel\/Strand.html","","",3],["Icecave\\Recoil\\Stream","","Icecave\/Recoil\/Stream.html","","",3],["Icecave\\Recoil\\Stream\\Exception","","Icecave\/Recoil\/Stream\/Exception.html","","",3],["BidirectionalChannelAdaptor","Icecave\\Recoil\\Channel","Icecave\/Recoil\/Channel\/BidirectionalChannelAdaptor.html","","Adapts separate read\/write channels into a bidirectional",1],["BidirectionalChannelInterface","Icecave\\Recoil\\Channel","Icecave\/Recoil\/Channel\/BidirectionalChannelInterface.html","","A data-channel that supports bidirectional communication.",1],["Channel","Icecave\\Recoil\\Channel","Icecave\/Recoil\/Channel\/Channel.html","","An unbuffered (synchronous) loop-back data channel",1],["ChannelClosedException","Icecave\\Recoil\\Channel\\Exception","Icecave\/Recoil\/Channel\/Exception\/ChannelClosedException.html"," < Exception","A read or write operation was attempted on a channel",1],["ChannelLockedException","Icecave\\Recoil\\Channel\\Exception","Icecave\/Recoil\/Channel\/Exception\/ChannelLockedException.html"," < Exception","A read or write operation was attempted on a channel",1],["QueueChannel","Icecave\\Recoil\\Channel","Icecave\/Recoil\/Channel\/QueueChannel.html","","An unbuffered (synchronous) loop-back data channel",1],["ReadableChannelInterface","Icecave\\Recoil\\Channel","Icecave\/Recoil\/Channel\/ReadableChannelInterface.html","","Interface and specification for coroutine based readable",1],["ReadableStreamChannel","Icecave\\Recoil\\Channel","Icecave\/Recoil\/Channel\/ReadableStreamChannel.html","","A readable channel that unserializes values from a",1],["PhpSerializer","Icecave\\Recoil\\Channel\\Serialization","Icecave\/Recoil\/Channel\/Serialization\/PhpSerializer.html","","A serializer that uses the built-in PHP serialization",1],["PhpUnserializer","Icecave\\Recoil\\Channel\\Serialization","Icecave\/Recoil\/Channel\/Serialization\/PhpUnserializer.html","","An unserializer that uses the built-in PHP serialization",1],["SerializerInterface","Icecave\\Recoil\\Channel\\Serialization","Icecave\/Recoil\/Channel\/Serialization\/SerializerInterface.html","","A mechanism for serializing PHP values on stream-based",1],["UnserializerInterface","Icecave\\Recoil\\Channel\\Serialization","Icecave\/Recoil\/Channel\/Serialization\/UnserializerInterface.html","","A mechanism for unserializing PHP values from stream-based",1],["WritableChannelInterface","Icecave\\Recoil\\Channel","Icecave\/Recoil\/Channel\/WritableChannelInterface.html","","Interface and specification for coroutine based writable",1],["WritableStreamChannel","Icecave\\Recoil\\Channel","Icecave\/Recoil\/Channel\/WritableStreamChannel.html","","A writable channel that serializes values onto a stream.",1],["AbstractCoroutine","Icecave\\Recoil\\Coroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html","","A base class for coroutines that keeps track of next",1],["CoroutineAdaptor","Icecave\\Recoil\\Coroutine","Icecave\/Recoil\/Coroutine\/CoroutineAdaptor.html","","The default coroutine adaptor implementation.",1],["CoroutineAdaptorInterface","Icecave\\Recoil\\Coroutine","Icecave\/Recoil\/Coroutine\/CoroutineAdaptorInterface.html","","Adapts arbitrary values into coroutine objects.",1],["CoroutineInterface","Icecave\\Recoil\\Coroutine","Icecave\/Recoil\/Coroutine\/CoroutineInterface.html","","A coroutine represents a unit of work that can be suspended",1],["CoroutineProviderInterface","Icecave\\Recoil\\Coroutine","Icecave\/Recoil\/Coroutine\/CoroutineProviderInterface.html","","A coroutine provide is an object that can produce an",1],["PromiseRejectedException","Icecave\\Recoil\\Coroutine\\Exception","Icecave\/Recoil\/Coroutine\/Exception\/PromiseRejectedException.html"," < Exception","Indicates that a promise was rejected.",1],["GeneratorCoroutine","Icecave\\Recoil\\Coroutine","Icecave\/Recoil\/Coroutine\/GeneratorCoroutine.html"," < AbstractCoroutine","A coroutine wrapper for PHP generators.",1],["PromiseCoroutine","Icecave\\Recoil\\Coroutine","Icecave\/Recoil\/Coroutine\/PromiseCoroutine.html"," < AbstractCoroutine","A coroutine that resumes when a promise is fulfilled",1],["KernelApi","Icecave\\Recoil\\Kernel\\Api","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html","","The default kernel API implementation.",1],["KernelApiCall","Icecave\\Recoil\\Kernel\\Api","Icecave\/Recoil\/Kernel\/Api\/KernelApiCall.html","","Represents a call to a feature provided by the Kernel",1],["KernelApiInterface","Icecave\\Recoil\\Kernel\\Api","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html","","Public interface for manipulating the kernel and the",1],["Select","Icecave\\Recoil\\Kernel\\Api","Icecave\/Recoil\/Kernel\/Api\/Select.html"," < AbstractCoroutine","Internal implementation of KernelApiInterface::select().",1],["Sleep","Icecave\\Recoil\\Kernel\\Api","Icecave\/Recoil\/Kernel\/Api\/Sleep.html"," < AbstractCoroutine","Internal implementation of KernelApiInterface::sleep().",1],["Timeout","Icecave\\Recoil\\Kernel\\Api","Icecave\/Recoil\/Kernel\/Api\/Timeout.html"," < AbstractCoroutine","Internal implementation of KernelApiInterface::timeout().",1],["StrandTerminatedException","Icecave\\Recoil\\Kernel\\Exception","Icecave\/Recoil\/Kernel\/Exception\/StrandTerminatedException.html"," < RuntimeException","Indicates that strand has been terminated.",1],["TimeoutException","Icecave\\Recoil\\Kernel\\Exception","Icecave\/Recoil\/Kernel\/Exception\/TimeoutException.html"," < RuntimeException","Indicates that a coroutine has timed out.",1],["Kernel","Icecave\\Recoil\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html","","The default kernel implementation.",1],["KernelInterface","Icecave\\Recoil\\Kernel","Icecave\/Recoil\/Kernel\/KernelInterface.html","","A coroutine kernel.",1],["StackBase","Icecave\\Recoil\\Kernel\\Strand","Icecave\/Recoil\/Kernel\/Strand\/StackBase.html"," < AbstractCoroutine","The base coroutine in a strand's call-stack.",1],["Strand","Icecave\\Recoil\\Kernel\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html"," < EventEmitter","A strand represents a user-space \"thread\" of execution.",1],["StrandFactory","Icecave\\Recoil\\Kernel\\Strand","Icecave\/Recoil\/Kernel\/Strand\/StrandFactory.html","","The default strand factory.",1],["StrandFactoryInterface","Icecave\\Recoil\\Kernel\\Strand","Icecave\/Recoil\/Kernel\/Strand\/StrandFactoryInterface.html","","A factory for strands.",1],["StrandInterface","Icecave\\Recoil\\Kernel\\Strand","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html","","A strand represents a user-space \"thread\" of execution.",1],["PackageInfo","Icecave\\Recoil","Icecave\/Recoil\/PackageInfo.html","","",1],["Recoil","Icecave\\Recoil","Icecave\/Recoil\/Recoil.html","","Public facade for Kernel API calls.",1],["BidirectionalStreamAdaptor","Icecave\\Recoil\\Stream","Icecave\/Recoil\/Stream\/BidirectionalStreamAdaptor.html","","Adapts separate read\/write streams into a bidirectional",1],["BidirectionalStreamInterface","Icecave\\Recoil\\Stream","Icecave\/Recoil\/Stream\/BidirectionalStreamInterface.html","","A stream that supports bidirectional communication.",1],["StreamClosedException","Icecave\\Recoil\\Stream\\Exception","Icecave\/Recoil\/Stream\/Exception\/StreamClosedException.html"," < LogicException","Indicates that a read or write operation was attempted",1],["StreamLockedException","Icecave\\Recoil\\Stream\\Exception","Icecave\/Recoil\/Stream\/Exception\/StreamLockedException.html"," < LogicException","Indicates that multiple read or write operations were",1],["StreamReadException","Icecave\\Recoil\\Stream\\Exception","Icecave\/Recoil\/Stream\/Exception\/StreamReadException.html"," < RuntimeException","Indicates that an error occured while attempting to",1],["StreamWriteException","Icecave\\Recoil\\Stream\\Exception","Icecave\/Recoil\/Stream\/Exception\/StreamWriteException.html"," < RuntimeException","Indicates that an error occured while attempting to",1],["ReadableReactStream","Icecave\\Recoil\\Stream","Icecave\/Recoil\/Stream\/ReadableReactStream.html","","Exposes a React readable stream as a Recoil readable",1],["ReadableStream","Icecave\\Recoil\\Stream","Icecave\/Recoil\/Stream\/ReadableStream.html","","A readable stream that operates directly on a native",1],["ReadableStreamInterface","Icecave\\Recoil\\Stream","Icecave\/Recoil\/Stream\/ReadableStreamInterface.html","","Interface and specification for coroutine based readable",1],["WritableReactStream","Icecave\\Recoil\\Stream","Icecave\/Recoil\/Stream\/WritableReactStream.html","","Exposes a React writable stream as a Recoil writable",1],["WritableStream","Icecave\\Recoil\\Stream","Icecave\/Recoil\/Stream\/WritableStream.html","","A writable stream that operates directly on a native",1],["WritableStreamInterface","Icecave\\Recoil\\Stream","Icecave\/Recoil\/Stream\/WritableStreamInterface.html","","Interface and specification for coroutine based writable",1],["BidirectionalChannelAdaptor::__construct","Icecave\\Recoil\\Channel\\BidirectionalChannelAdaptor","Icecave\/Recoil\/Channel\/BidirectionalChannelAdaptor.html#method___construct","(<a href=\"Icecave\/Recoil\/Channel\/ReadableChannelInterface.html\"><abbr title=\"Icecave\\Recoil\\Channel\\ReadableChannelInterface\">ReadableChannelInterface<\/abbr><\/a> $readChannel, <a href=\"Icecave\/Recoil\/Channel\/WritableChannelInterface.html\"><abbr title=\"Icecave\\Recoil\\Channel\\WritableChannelInterface\">WritableChannelInterface<\/abbr><\/a> $writeChannel)","",2],["BidirectionalChannelAdaptor::read","Icecave\\Recoil\\Channel\\BidirectionalChannelAdaptor","Icecave\/Recoil\/Channel\/BidirectionalChannelAdaptor.html#method_read","()","[COROUTINE] Read a value from this channel.",2],["BidirectionalChannelAdaptor::write","Icecave\\Recoil\\Channel\\BidirectionalChannelAdaptor","Icecave\/Recoil\/Channel\/BidirectionalChannelAdaptor.html#method_write","(mixed $value)","[COROUTINE] Write a value to this channel.",2],["BidirectionalChannelAdaptor::close","Icecave\\Recoil\\Channel\\BidirectionalChannelAdaptor","Icecave\/Recoil\/Channel\/BidirectionalChannelAdaptor.html#method_close","()","[COROUTINE] Close this channel.",2],["BidirectionalChannelAdaptor::isClosed","Icecave\\Recoil\\Channel\\BidirectionalChannelAdaptor","Icecave\/Recoil\/Channel\/BidirectionalChannelAdaptor.html#method_isClosed","()","Check if this channel is closed.",2],["Channel::__construct","Icecave\\Recoil\\Channel\\Channel","Icecave\/Recoil\/Channel\/Channel.html#method___construct","()","",2],["Channel::read","Icecave\\Recoil\\Channel\\Channel","Icecave\/Recoil\/Channel\/Channel.html#method_read","()","[COROUTINE] Read a value from this channel.",2],["Channel::write","Icecave\\Recoil\\Channel\\Channel","Icecave\/Recoil\/Channel\/Channel.html#method_write","(mixed $value)","[COROUTINE] Write a value to this channel.",2],["Channel::close","Icecave\\Recoil\\Channel\\Channel","Icecave\/Recoil\/Channel\/Channel.html#method_close","()","[COROUTINE] Close this channel.",2],["Channel::isClosed","Icecave\\Recoil\\Channel\\Channel","Icecave\/Recoil\/Channel\/Channel.html#method_isClosed","()","Check if this channel is closed.",2],["ChannelClosedException::__construct","Icecave\\Recoil\\Channel\\Exception\\ChannelClosedException","Icecave\/Recoil\/Channel\/Exception\/ChannelClosedException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["ChannelLockedException::__construct","Icecave\\Recoil\\Channel\\Exception\\ChannelLockedException","Icecave\/Recoil\/Channel\/Exception\/ChannelLockedException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["QueueChannel::__construct","Icecave\\Recoil\\Channel\\QueueChannel","Icecave\/Recoil\/Channel\/QueueChannel.html#method___construct","()","",2],["QueueChannel::read","Icecave\\Recoil\\Channel\\QueueChannel","Icecave\/Recoil\/Channel\/QueueChannel.html#method_read","()","[COROUTINE] Read a value from this channel.",2],["QueueChannel::write","Icecave\\Recoil\\Channel\\QueueChannel","Icecave\/Recoil\/Channel\/QueueChannel.html#method_write","(mixed $value)","[COROUTINE] Write a value to this channel.",2],["QueueChannel::close","Icecave\\Recoil\\Channel\\QueueChannel","Icecave\/Recoil\/Channel\/QueueChannel.html#method_close","()","[COROUTINE] Close this channel.",2],["QueueChannel::isClosed","Icecave\\Recoil\\Channel\\QueueChannel","Icecave\/Recoil\/Channel\/QueueChannel.html#method_isClosed","()","Check if this channel is closed.",2],["ReadableChannelInterface::read","Icecave\\Recoil\\Channel\\ReadableChannelInterface","Icecave\/Recoil\/Channel\/ReadableChannelInterface.html#method_read","()","[COROUTINE] Read a value from this channel.",2],["ReadableChannelInterface::close","Icecave\\Recoil\\Channel\\ReadableChannelInterface","Icecave\/Recoil\/Channel\/ReadableChannelInterface.html#method_close","()","[COROUTINE] Close this channel.",2],["ReadableChannelInterface::isClosed","Icecave\\Recoil\\Channel\\ReadableChannelInterface","Icecave\/Recoil\/Channel\/ReadableChannelInterface.html#method_isClosed","()","Check if this channel is closed.",2],["ReadableStreamChannel::__construct","Icecave\\Recoil\\Channel\\ReadableStreamChannel","Icecave\/Recoil\/Channel\/ReadableStreamChannel.html#method___construct","(<a href=\"Icecave\/Recoil\/Stream\/ReadableStreamInterface.html\"><abbr title=\"Icecave\\Recoil\\Stream\\ReadableStreamInterface\">ReadableStreamInterface<\/abbr><\/a> $stream, <a href=\"Icecave\/Recoil\/Channel\/Serialization\/UnserializerInterface.html\"><abbr title=\"Icecave\\Recoil\\Channel\\Serialization\\UnserializerInterface\">UnserializerInterface<\/abbr><\/a> $unserializer = null, integer $bufferSize = 8192)","",2],["ReadableStreamChannel::read","Icecave\\Recoil\\Channel\\ReadableStreamChannel","Icecave\/Recoil\/Channel\/ReadableStreamChannel.html#method_read","()","[COROUTINE] Read a value from this channel.",2],["ReadableStreamChannel::close","Icecave\\Recoil\\Channel\\ReadableStreamChannel","Icecave\/Recoil\/Channel\/ReadableStreamChannel.html#method_close","()","[COROUTINE] Close this channel.",2],["ReadableStreamChannel::isClosed","Icecave\\Recoil\\Channel\\ReadableStreamChannel","Icecave\/Recoil\/Channel\/ReadableStreamChannel.html#method_isClosed","()","Check if this channel is closed.",2],["PhpSerializer::serialize","Icecave\\Recoil\\Channel\\Serialization\\PhpSerializer","Icecave\/Recoil\/Channel\/Serialization\/PhpSerializer.html#method_serialize","(mixed $value)","Serialize a value to a string.",2],["PhpUnserializer::__construct","Icecave\\Recoil\\Channel\\Serialization\\PhpUnserializer","Icecave\/Recoil\/Channel\/Serialization\/PhpUnserializer.html#method___construct","()","",2],["PhpUnserializer::feed","Icecave\\Recoil\\Channel\\Serialization\\PhpUnserializer","Icecave\/Recoil\/Channel\/Serialization\/PhpUnserializer.html#method_feed","(string $buffer)","Parse data received from the stream.",2],["PhpUnserializer::hasValue","Icecave\\Recoil\\Channel\\Serialization\\PhpUnserializer","Icecave\/Recoil\/Channel\/Serialization\/PhpUnserializer.html#method_hasValue","()","Check if enough data has been received to parse a full",2],["PhpUnserializer::unserialize","Icecave\\Recoil\\Channel\\Serialization\\PhpUnserializer","Icecave\/Recoil\/Channel\/Serialization\/PhpUnserializer.html#method_unserialize","()","Unserialize the next value.",2],["PhpUnserializer::finalize","Icecave\\Recoil\\Channel\\Serialization\\PhpUnserializer","Icecave\/Recoil\/Channel\/Serialization\/PhpUnserializer.html#method_finalize","()","Finalize the unserialization process.",2],["SerializerInterface::serialize","Icecave\\Recoil\\Channel\\Serialization\\SerializerInterface","Icecave\/Recoil\/Channel\/Serialization\/SerializerInterface.html#method_serialize","(mixed $value)","Serialize a value to a string.",2],["UnserializerInterface::feed","Icecave\\Recoil\\Channel\\Serialization\\UnserializerInterface","Icecave\/Recoil\/Channel\/Serialization\/UnserializerInterface.html#method_feed","(string $buffer)","Parse data received from the stream.",2],["UnserializerInterface::hasValue","Icecave\\Recoil\\Channel\\Serialization\\UnserializerInterface","Icecave\/Recoil\/Channel\/Serialization\/UnserializerInterface.html#method_hasValue","()","Check if enough data has been received to parse a full",2],["UnserializerInterface::unserialize","Icecave\\Recoil\\Channel\\Serialization\\UnserializerInterface","Icecave\/Recoil\/Channel\/Serialization\/UnserializerInterface.html#method_unserialize","()","Unserialize the next value.",2],["UnserializerInterface::finalize","Icecave\\Recoil\\Channel\\Serialization\\UnserializerInterface","Icecave\/Recoil\/Channel\/Serialization\/UnserializerInterface.html#method_finalize","()","Finalize the unserialization process.",2],["WritableChannelInterface::write","Icecave\\Recoil\\Channel\\WritableChannelInterface","Icecave\/Recoil\/Channel\/WritableChannelInterface.html#method_write","(mixed $value)","[COROUTINE] Write a value to this channel.",2],["WritableChannelInterface::close","Icecave\\Recoil\\Channel\\WritableChannelInterface","Icecave\/Recoil\/Channel\/WritableChannelInterface.html#method_close","()","[COROUTINE] Close this channel.",2],["WritableChannelInterface::isClosed","Icecave\\Recoil\\Channel\\WritableChannelInterface","Icecave\/Recoil\/Channel\/WritableChannelInterface.html#method_isClosed","()","Check if this channel is closed.",2],["WritableStreamChannel::__construct","Icecave\\Recoil\\Channel\\WritableStreamChannel","Icecave\/Recoil\/Channel\/WritableStreamChannel.html#method___construct","(<a href=\"Icecave\/Recoil\/Stream\/WritableStreamInterface.html\"><abbr title=\"Icecave\\Recoil\\Stream\\WritableStreamInterface\">WritableStreamInterface<\/abbr><\/a> $stream, <a href=\"Icecave\/Recoil\/Channel\/Serialization\/SerializerInterface.html\"><abbr title=\"Icecave\\Recoil\\Channel\\Serialization\\SerializerInterface\">SerializerInterface<\/abbr><\/a> $serializer = null)","",2],["WritableStreamChannel::write","Icecave\\Recoil\\Channel\\WritableStreamChannel","Icecave\/Recoil\/Channel\/WritableStreamChannel.html#method_write","(mixed $value)","[COROUTINE] Write a value to this channel.",2],["WritableStreamChannel::close","Icecave\\Recoil\\Channel\\WritableStreamChannel","Icecave\/Recoil\/Channel\/WritableStreamChannel.html#method_close","()","[COROUTINE] Close this channel.",2],["WritableStreamChannel::isClosed","Icecave\\Recoil\\Channel\\WritableStreamChannel","Icecave\/Recoil\/Channel\/WritableStreamChannel.html#method_isClosed","()","Check if this channel is closed.",2],["AbstractCoroutine::__construct","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method___construct","()","",2],["AbstractCoroutine::call","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method_call","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called for the first time.",2],["AbstractCoroutine::resumeWithValue","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method_resumeWithValue","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Invoked when tick() is called after sendOnNextTick().",2],["AbstractCoroutine::resumeWithException","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method_resumeWithException","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Invoked when tick() is called after throwOnNextTick().",2],["AbstractCoroutine::terminate","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called after terminateOnNextTick().",2],["AbstractCoroutine::tick","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method_tick","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Execute the next unit of work.",2],["AbstractCoroutine::sendOnNextTick","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method_sendOnNextTick","(mixed $value)","Store a value to send to the coroutine on the next",2],["AbstractCoroutine::throwOnNextTick","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method_throwOnNextTick","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Store an exception to send to the coroutine on the",2],["AbstractCoroutine::terminateOnNextTick","Icecave\\Recoil\\Coroutine\\AbstractCoroutine","Icecave\/Recoil\/Coroutine\/AbstractCoroutine.html#method_terminateOnNextTick","()","Instruct the coroutine to terminate execution on the",2],["CoroutineAdaptor::adapt","Icecave\\Recoil\\Coroutine\\CoroutineAdaptor","Icecave\/Recoil\/Coroutine\/CoroutineAdaptor.html#method_adapt","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Adapt a value into a coroutine.",2],["CoroutineAdaptorInterface::adapt","Icecave\\Recoil\\Coroutine\\CoroutineAdaptorInterface","Icecave\/Recoil\/Coroutine\/CoroutineAdaptorInterface.html#method_adapt","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Adapt a value into a coroutine.",2],["CoroutineInterface::tick","Icecave\\Recoil\\Coroutine\\CoroutineInterface","Icecave\/Recoil\/Coroutine\/CoroutineInterface.html#method_tick","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Execute the next unit of work.",2],["CoroutineInterface::sendOnNextTick","Icecave\\Recoil\\Coroutine\\CoroutineInterface","Icecave\/Recoil\/Coroutine\/CoroutineInterface.html#method_sendOnNextTick","(mixed $value)","Store a value to send to the coroutine on the next",2],["CoroutineInterface::throwOnNextTick","Icecave\\Recoil\\Coroutine\\CoroutineInterface","Icecave\/Recoil\/Coroutine\/CoroutineInterface.html#method_throwOnNextTick","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Store an exception to send to the coroutine on the",2],["CoroutineInterface::terminateOnNextTick","Icecave\\Recoil\\Coroutine\\CoroutineInterface","Icecave\/Recoil\/Coroutine\/CoroutineInterface.html#method_terminateOnNextTick","()","Instruct the coroutine to terminate execution on the",2],["CoroutineProviderInterface::coroutine","Icecave\\Recoil\\Coroutine\\CoroutineProviderInterface","Icecave\/Recoil\/Coroutine\/CoroutineProviderInterface.html#method_coroutine","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Produce a coroutine.",2],["PromiseRejectedException::__construct","Icecave\\Recoil\\Coroutine\\Exception\\PromiseRejectedException","Icecave\/Recoil\/Coroutine\/Exception\/PromiseRejectedException.html#method___construct","(mixed $reason)","",2],["PromiseRejectedException::reason","Icecave\\Recoil\\Coroutine\\Exception\\PromiseRejectedException","Icecave\/Recoil\/Coroutine\/Exception\/PromiseRejectedException.html#method_reason","()","Fetch the rejection reason.",2],["GeneratorCoroutine::__construct","Icecave\\Recoil\\Coroutine\\GeneratorCoroutine","Icecave\/Recoil\/Coroutine\/GeneratorCoroutine.html#method___construct","(<a href=\"http:\/\/php.net\/Generator\"><abbr title=\"Generator\">Generator<\/abbr><\/a> $generator)","",2],["GeneratorCoroutine::call","Icecave\\Recoil\\Coroutine\\GeneratorCoroutine","Icecave\/Recoil\/Coroutine\/GeneratorCoroutine.html#method_call","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called for the first time.",2],["GeneratorCoroutine::resumeWithValue","Icecave\\Recoil\\Coroutine\\GeneratorCoroutine","Icecave\/Recoil\/Coroutine\/GeneratorCoroutine.html#method_resumeWithValue","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Invoked when tick() is called after sendOnNextTick().",2],["GeneratorCoroutine::resumeWithException","Icecave\\Recoil\\Coroutine\\GeneratorCoroutine","Icecave\/Recoil\/Coroutine\/GeneratorCoroutine.html#method_resumeWithException","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Invoked when tick() is called after throwOnNextTick().",2],["GeneratorCoroutine::terminate","Icecave\\Recoil\\Coroutine\\GeneratorCoroutine","Icecave\/Recoil\/Coroutine\/GeneratorCoroutine.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called after terminateOnNextTick().",2],["PromiseCoroutine::__construct","Icecave\\Recoil\\Coroutine\\PromiseCoroutine","Icecave\/Recoil\/Coroutine\/PromiseCoroutine.html#method___construct","(<abbr title=\"React\\Promise\\PromiseInterface\">PromiseInterface<\/abbr> $promise)","",2],["PromiseCoroutine::promise","Icecave\\Recoil\\Coroutine\\PromiseCoroutine","Icecave\/Recoil\/Coroutine\/PromiseCoroutine.html#method_promise","()","Fetch the wrapped promise object.",2],["PromiseCoroutine::call","Icecave\\Recoil\\Coroutine\\PromiseCoroutine","Icecave\/Recoil\/Coroutine\/PromiseCoroutine.html#method_call","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called for the first time.",2],["PromiseCoroutine::resumeWithValue","Icecave\\Recoil\\Coroutine\\PromiseCoroutine","Icecave\/Recoil\/Coroutine\/PromiseCoroutine.html#method_resumeWithValue","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Invoked when tick() is called after sendOnNextTick().",2],["PromiseCoroutine::resumeWithException","Icecave\\Recoil\\Coroutine\\PromiseCoroutine","Icecave\/Recoil\/Coroutine\/PromiseCoroutine.html#method_resumeWithException","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Invoked when tick() is called after throwOnNextTick().",2],["PromiseCoroutine::terminate","Icecave\\Recoil\\Coroutine\\PromiseCoroutine","Icecave\/Recoil\/Coroutine\/PromiseCoroutine.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called after terminateOnNextTick().",2],["KernelApi::strand","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_strand","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Get the strand the coroutine is executing on.",2],["KernelApi::kernel","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_kernel","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Get the coroutine kernel that the current strand is",2],["KernelApi::eventLoop","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_eventLoop","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Get the React event-loop that the coroutine kernel",2],["KernelApi::return_","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_return_","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value = null)","Return a value to the calling coroutine.",2],["KernelApi::throw_","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_throw_","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Throw an exception to the calling coroutine.",2],["KernelApi::terminate","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Terminate execution of the strand.",2],["KernelApi::sleep","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_sleep","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <abbr title=\"Icecave\\Recoil\\Kernel\\Api\\number\">number<\/abbr> $timeout)","Suspend execution for a specified period of time.",2],["KernelApi::suspend","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_suspend","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <abbr title=\"Icecave\\Recoil\\Kernel\\Api\\callable\">callable<\/abbr> $callback)","Suspend execution of the strand.",2],["KernelApi::timeout","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_timeout","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <abbr title=\"Icecave\\Recoil\\Kernel\\Api\\number\">number<\/abbr> $timeout, mixed $coroutine)","Execute a coroutine with a time limit.",2],["KernelApi::cooperate","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_cooperate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Suspend the strand until the next tick.",2],["KernelApi::noop","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_noop","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Resume the strand immediately.",2],["KernelApi::execute","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_execute","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $coroutine)","Execute a coroutine on its own strand.",2],["KernelApi::stop","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_stop","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, boolean $stopEventLoop = true)","Stop the coroutine kernel \/ event-loop.",2],["KernelApi::select","Icecave\\Recoil\\Kernel\\Api\\KernelApi","Icecave\/Recoil\/Kernel\/Api\/KernelApi.html#method_select","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, array $strands)","Wait for one or more of the given strands to exit.",2],["KernelApiCall::__construct","Icecave\\Recoil\\Kernel\\Api\\KernelApiCall","Icecave\/Recoil\/Kernel\/Api\/KernelApiCall.html#method___construct","(string $name, array $arguments)","",2],["KernelApiCall::name","Icecave\\Recoil\\Kernel\\Api\\KernelApiCall","Icecave\/Recoil\/Kernel\/Api\/KernelApiCall.html#method_name","()","Fetch the name of the kernel API function to invoke.",2],["KernelApiCall::arguments","Icecave\\Recoil\\Kernel\\Api\\KernelApiCall","Icecave\/Recoil\/Kernel\/Api\/KernelApiCall.html#method_arguments","()","Fetch the arguments to the kernel API function.",2],["KernelApiCall::tick","Icecave\\Recoil\\Kernel\\Api\\KernelApiCall","Icecave\/Recoil\/Kernel\/Api\/KernelApiCall.html#method_tick","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Execute the next unit of work.",2],["KernelApiCall::sendOnNextTick","Icecave\\Recoil\\Kernel\\Api\\KernelApiCall","Icecave\/Recoil\/Kernel\/Api\/KernelApiCall.html#method_sendOnNextTick","(mixed $value)","Store a value to send to the coroutine on the next",2],["KernelApiCall::throwOnNextTick","Icecave\\Recoil\\Kernel\\Api\\KernelApiCall","Icecave\/Recoil\/Kernel\/Api\/KernelApiCall.html#method_throwOnNextTick","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Store an exception to send to the coroutine on the",2],["KernelApiCall::terminateOnNextTick","Icecave\\Recoil\\Kernel\\Api\\KernelApiCall","Icecave\/Recoil\/Kernel\/Api\/KernelApiCall.html#method_terminateOnNextTick","()","Instruct the coroutine to terminate execution on the",2],["KernelApiInterface::strand","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_strand","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Get the strand the coroutine is executing on.",2],["KernelApiInterface::kernel","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_kernel","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Get the coroutine kernel that the current strand is",2],["KernelApiInterface::eventLoop","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_eventLoop","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Get the React event-loop that the coroutine kernel",2],["KernelApiInterface::return_","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_return_","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value = null)","Return a value to the calling coroutine.",2],["KernelApiInterface::throw_","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_throw_","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Throw an exception to the calling coroutine.",2],["KernelApiInterface::terminate","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Terminate execution of the strand.",2],["KernelApiInterface::sleep","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_sleep","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <abbr title=\"Icecave\\Recoil\\Kernel\\Api\\number\">number<\/abbr> $timeout)","Suspend execution for a specified period of time.",2],["KernelApiInterface::suspend","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_suspend","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <abbr title=\"Icecave\\Recoil\\Kernel\\Api\\callable\">callable<\/abbr> $callback)","Suspend execution of the strand until it is resumed",2],["KernelApiInterface::timeout","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_timeout","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <abbr title=\"Icecave\\Recoil\\Kernel\\Api\\number\">number<\/abbr> $timeout, mixed $coroutine)","Execute a coroutine with a time limit.",2],["KernelApiInterface::noop","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_noop","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Resume the strand immediately.",2],["KernelApiInterface::cooperate","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_cooperate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Suspend the strand until the next tick.",2],["KernelApiInterface::execute","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_execute","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $coroutine)","Execute a coroutine on its own strand.",2],["KernelApiInterface::stop","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_stop","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, boolean $stopEventLoop = true)","Stop the coroutine kernel \/ event-loop.",2],["KernelApiInterface::select","Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface","Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html#method_select","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, array $strands)","Wait for one or more of the given strands to exit.",2],["Select::__construct","Icecave\\Recoil\\Kernel\\Api\\Select","Icecave\/Recoil\/Kernel\/Api\/Select.html#method___construct","(array $strands)","",2],["Select::call","Icecave\\Recoil\\Kernel\\Api\\Select","Icecave\/Recoil\/Kernel\/Api\/Select.html#method_call","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called for the first time.",2],["Select::resumeWithValue","Icecave\\Recoil\\Kernel\\Api\\Select","Icecave\/Recoil\/Kernel\/Api\/Select.html#method_resumeWithValue","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Invoked when tick() is called after sendOnNextTick().",2],["Select::resumeWithException","Icecave\\Recoil\\Kernel\\Api\\Select","Icecave\/Recoil\/Kernel\/Api\/Select.html#method_resumeWithException","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Invoked when tick() is called after throwOnNextTick().",2],["Select::terminate","Icecave\\Recoil\\Kernel\\Api\\Select","Icecave\/Recoil\/Kernel\/Api\/Select.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called after terminateOnNextTick().",2],["Select::scheduleResume","Icecave\\Recoil\\Kernel\\Api\\Select","Icecave\/Recoil\/Kernel\/Api\/Select.html#method_scheduleResume","()","",2],["Sleep::__construct","Icecave\\Recoil\\Kernel\\Api\\Sleep","Icecave\/Recoil\/Kernel\/Api\/Sleep.html#method___construct","($timeout)","",2],["Sleep::call","Icecave\\Recoil\\Kernel\\Api\\Sleep","Icecave\/Recoil\/Kernel\/Api\/Sleep.html#method_call","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called for the first time.",2],["Sleep::resumeWithValue","Icecave\\Recoil\\Kernel\\Api\\Sleep","Icecave\/Recoil\/Kernel\/Api\/Sleep.html#method_resumeWithValue","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Invoked when tick() is called after sendOnNextTick().",2],["Sleep::resumeWithException","Icecave\\Recoil\\Kernel\\Api\\Sleep","Icecave\/Recoil\/Kernel\/Api\/Sleep.html#method_resumeWithException","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Invoked when tick() is called after throwOnNextTick().",2],["Sleep::terminate","Icecave\\Recoil\\Kernel\\Api\\Sleep","Icecave\/Recoil\/Kernel\/Api\/Sleep.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called after terminateOnNextTick().",2],["Timeout::__construct","Icecave\\Recoil\\Kernel\\Api\\Timeout","Icecave\/Recoil\/Kernel\/Api\/Timeout.html#method___construct","($timeout, $coroutine)","",2],["Timeout::call","Icecave\\Recoil\\Kernel\\Api\\Timeout","Icecave\/Recoil\/Kernel\/Api\/Timeout.html#method_call","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called for the first time.",2],["Timeout::resumeWithValue","Icecave\\Recoil\\Kernel\\Api\\Timeout","Icecave\/Recoil\/Kernel\/Api\/Timeout.html#method_resumeWithValue","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Invoked when tick() is called after sendOnNextTick().",2],["Timeout::resumeWithException","Icecave\\Recoil\\Kernel\\Api\\Timeout","Icecave\/Recoil\/Kernel\/Api\/Timeout.html#method_resumeWithException","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Invoked when tick() is called after throwOnNextTick().",2],["Timeout::terminate","Icecave\\Recoil\\Kernel\\Api\\Timeout","Icecave\/Recoil\/Kernel\/Api\/Timeout.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called after terminateOnNextTick().",2],["StrandTerminatedException::__construct","Icecave\\Recoil\\Kernel\\Exception\\StrandTerminatedException","Icecave\/Recoil\/Kernel\/Exception\/StrandTerminatedException.html#method___construct","()","",2],["TimeoutException::__construct","Icecave\\Recoil\\Kernel\\Exception\\TimeoutException","Icecave\/Recoil\/Kernel\/Exception\/TimeoutException.html#method___construct","()","",2],["Kernel::__construct","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method___construct","(<abbr title=\"React\\EventLoop\\LoopInterface\">LoopInterface<\/abbr> $eventLoop = null, <a href=\"Icecave\/Recoil\/Kernel\/Api\/KernelApiInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Api\\KernelApiInterface\">KernelApiInterface<\/abbr><\/a> $api = null, <a href=\"Icecave\/Recoil\/Coroutine\/CoroutineAdaptorInterface.html\"><abbr title=\"Icecave\\Recoil\\Coroutine\\CoroutineAdaptorInterface\">CoroutineAdaptorInterface<\/abbr><\/a> $coroutineAdaptor = null, <a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandFactoryInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandFactoryInterface\">StrandFactoryInterface<\/abbr><\/a> $strandFactory = null)","",2],["Kernel::execute","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method_execute","(mixed $coroutine)","Execute a coroutine in a new strand of execution.",2],["Kernel::attachStrand","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method_attachStrand","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Attach an existing strand to this kernel.",2],["Kernel::detachStrand","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method_detachStrand","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Detach an existing strand from this kernel.",2],["Kernel::api","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method_api","()","Fetch the object that implements the kernel API.",2],["Kernel::coroutineAdaptor","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method_coroutineAdaptor","()","Fetch the object used to adapt values into coroutines.",2],["Kernel::strandFactory","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method_strandFactory","()","Fetch the factory used to create new strands.",2],["Kernel::eventLoop","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method_eventLoop","()","Fetch the React event-loop.",2],["Kernel::stop","Icecave\\Recoil\\Kernel\\Kernel","Icecave\/Recoil\/Kernel\/Kernel.html#method_stop","(boolean $stopEventLoop = true)","Terminate all strands and stop execution.",2],["KernelInterface::execute","Icecave\\Recoil\\Kernel\\KernelInterface","Icecave\/Recoil\/Kernel\/KernelInterface.html#method_execute","(mixed $coroutine)","Execute a coroutine in a new strand of execution.",2],["KernelInterface::attachStrand","Icecave\\Recoil\\Kernel\\KernelInterface","Icecave\/Recoil\/Kernel\/KernelInterface.html#method_attachStrand","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Attach an existing strand to this kernel.",2],["KernelInterface::detachStrand","Icecave\\Recoil\\Kernel\\KernelInterface","Icecave\/Recoil\/Kernel\/KernelInterface.html#method_detachStrand","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Detach an existing strand from this kernel.",2],["KernelInterface::api","Icecave\\Recoil\\Kernel\\KernelInterface","Icecave\/Recoil\/Kernel\/KernelInterface.html#method_api","()","Fetch the object that implements the kernel API.",2],["KernelInterface::coroutineAdaptor","Icecave\\Recoil\\Kernel\\KernelInterface","Icecave\/Recoil\/Kernel\/KernelInterface.html#method_coroutineAdaptor","()","Fetch the object used to adapt values into coroutines.",2],["KernelInterface::strandFactory","Icecave\\Recoil\\Kernel\\KernelInterface","Icecave\/Recoil\/Kernel\/KernelInterface.html#method_strandFactory","()","Fetch the factory used to create new strands.",2],["KernelInterface::eventLoop","Icecave\\Recoil\\Kernel\\KernelInterface","Icecave\/Recoil\/Kernel\/KernelInterface.html#method_eventLoop","()","Fetch the React event-loop.",2],["KernelInterface::stop","Icecave\\Recoil\\Kernel\\KernelInterface","Icecave\/Recoil\/Kernel\/KernelInterface.html#method_stop","(boolean $stopEventLoop = true)","Terminate all strands and stop execution.",2],["StackBase::call","Icecave\\Recoil\\Kernel\\Strand\\StackBase","Icecave\/Recoil\/Kernel\/Strand\/StackBase.html#method_call","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called for the first time.",2],["StackBase::resumeWithValue","Icecave\\Recoil\\Kernel\\Strand\\StackBase","Icecave\/Recoil\/Kernel\/Strand\/StackBase.html#method_resumeWithValue","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, mixed $value)","Invoked when tick() is called after sendOnNextTick().",2],["StackBase::resumeWithException","Icecave\\Recoil\\Kernel\\Strand\\StackBase","Icecave\/Recoil\/Kernel\/Strand\/StackBase.html#method_resumeWithException","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Invoked when tick() is called after throwOnNextTick().",2],["StackBase::terminate","Icecave\\Recoil\\Kernel\\Strand\\StackBase","Icecave\/Recoil\/Kernel\/Strand\/StackBase.html#method_terminate","(<a href=\"Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\Strand\\StrandInterface\">StrandInterface<\/abbr><\/a> $strand)","Invoked when tick() is called after terminateOnNextTick().",2],["Strand::__construct","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method___construct","(<a href=\"Icecave\/Recoil\/Kernel\/KernelInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\KernelInterface\">KernelInterface<\/abbr><\/a> $kernel)","",2],["Strand::kernel","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_kernel","()","Fetch the kernel on which this strand is executing.",2],["Strand::current","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_current","()","Fetch the coroutine currently being executed.",2],["Strand::push","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_push","(mixed $coroutine)","Push a coroutine onto the stack.",2],["Strand::pop","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_pop","()","Pop the current coroutine off the stack.",2],["Strand::call","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_call","(mixed $coroutine)","Call the given coroutine immediately.",2],["Strand::returnValue","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_returnValue","(mixed $value = null)","Return a value to calling coroutine.",2],["Strand::throwException","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_throwException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Throw an exception to the calling coroutine.",2],["Strand::suspend","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_suspend","()","Suspend execution of this strand.",2],["Strand::resume","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_resume","()","Resume execution of this strand.",2],["Strand::resumeWithValue","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_resumeWithValue","($value)","Resume execution of this strand and send a value to",2],["Strand::resumeWithException","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_resumeWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution of this strand and throw an excption",2],["Strand::terminate","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_terminate","()","Terminate this execution context.",2],["Strand::hasExited","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_hasExited","()","Check if the strand has exited.",2],["Strand::tick","Icecave\\Recoil\\Kernel\\Strand\\Strand","Icecave\/Recoil\/Kernel\/Strand\/Strand.html#method_tick","()","Perform the next unit-of-work for this strand.",2],["StrandFactory::createStrand","Icecave\\Recoil\\Kernel\\Strand\\StrandFactory","Icecave\/Recoil\/Kernel\/Strand\/StrandFactory.html#method_createStrand","(<a href=\"Icecave\/Recoil\/Kernel\/KernelInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\KernelInterface\">KernelInterface<\/abbr><\/a> $kernel)","Create a strand.",2],["StrandFactoryInterface::createStrand","Icecave\\Recoil\\Kernel\\Strand\\StrandFactoryInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandFactoryInterface.html#method_createStrand","(<a href=\"Icecave\/Recoil\/Kernel\/KernelInterface.html\"><abbr title=\"Icecave\\Recoil\\Kernel\\KernelInterface\">KernelInterface<\/abbr><\/a> $kernel)","Create a strand.",2],["StrandInterface::kernel","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_kernel","()","Fetch the kernel on which this strand is executing.",2],["StrandInterface::current","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_current","()","Fetch the coroutine this strand is currently executing.",2],["StrandInterface::push","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_push","(mixed $coroutine)","Push a coroutine onto the stack.",2],["StrandInterface::pop","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_pop","()","Pop the current coroutine off the stack.",2],["StrandInterface::call","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_call","(mixed $coroutine)","Call the given coroutine.",2],["StrandInterface::returnValue","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_returnValue","(mixed $value = null)","Return a value to the calling coroutine.",2],["StrandInterface::throwException","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_throwException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Throw an exception to the calling coroutine.",2],["StrandInterface::suspend","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_suspend","()","Suspend execution of this strand.",2],["StrandInterface::resume","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_resume","()","Resume execution of this strand.",2],["StrandInterface::resumeWithValue","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_resumeWithValue","($value)","Resume execution of this strand and send a value to",2],["StrandInterface::resumeWithException","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_resumeWithException","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","Resume execution of this strand and throw an excption",2],["StrandInterface::terminate","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_terminate","()","Terminate execution of this strand.",2],["StrandInterface::hasExited","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_hasExited","()","Check if the strand has exited.",2],["StrandInterface::tick","Icecave\\Recoil\\Kernel\\Strand\\StrandInterface","Icecave\/Recoil\/Kernel\/Strand\/StrandInterface.html#method_tick","()","Perform the next unit-of-work for this strand.",2],["Recoil::__callStatic","Icecave\\Recoil\\Recoil","Icecave\/Recoil\/Recoil.html#method___callStatic","(string $name, array $arguments)","[COROUTINE] Invoke a kernel API function.",2],["Recoil::run","Icecave\\Recoil\\Recoil","Icecave\/Recoil\/Recoil.html#method_run","(<abbr title=\"Icecave\\Recoil\\callable\">callable<\/abbr> $entryPoint, <abbr title=\"React\\EventLoop\\LoopInterface\">LoopInterface<\/abbr> $eventLoop = null)","Create and run a new coroutine kernel.",2],["BidirectionalStreamAdaptor::__construct","Icecave\\Recoil\\Stream\\BidirectionalStreamAdaptor","Icecave\/Recoil\/Stream\/BidirectionalStreamAdaptor.html#method___construct","(<a href=\"Icecave\/Recoil\/Stream\/ReadableStreamInterface.html\"><abbr title=\"Icecave\\Recoil\\Stream\\ReadableStreamInterface\">ReadableStreamInterface<\/abbr><\/a> $readStream, <a href=\"Icecave\/Recoil\/Stream\/WritableStreamInterface.html\"><abbr title=\"Icecave\\Recoil\\Stream\\WritableStreamInterface\">WritableStreamInterface<\/abbr><\/a> $writeStream)","",2],["BidirectionalStreamAdaptor::read","Icecave\\Recoil\\Stream\\BidirectionalStreamAdaptor","Icecave\/Recoil\/Stream\/BidirectionalStreamAdaptor.html#method_read","(integer $length)","[COROUTINE] Read data from the stream.",2],["BidirectionalStreamAdaptor::write","Icecave\\Recoil\\Stream\\BidirectionalStreamAdaptor","Icecave\/Recoil\/Stream\/BidirectionalStreamAdaptor.html#method_write","(string $buffer, integer|null $length = null)","[COROUTINE] Write data to this stream.",2],["BidirectionalStreamAdaptor::writeAll","Icecave\\Recoil\\Stream\\BidirectionalStreamAdaptor","Icecave\/Recoil\/Stream\/BidirectionalStreamAdaptor.html#method_writeAll","($buffer)","[COROUTINE] Write all data from the given buffer to",2],["BidirectionalStreamAdaptor::close","Icecave\\Recoil\\Stream\\BidirectionalStreamAdaptor","Icecave\/Recoil\/Stream\/BidirectionalStreamAdaptor.html#method_close","()","[COROUTINE] Close this stream.",2],["BidirectionalStreamAdaptor::isClosed","Icecave\\Recoil\\Stream\\BidirectionalStreamAdaptor","Icecave\/Recoil\/Stream\/BidirectionalStreamAdaptor.html#method_isClosed","()","Check if this stream is closed.",2],["StreamClosedException::__construct","Icecave\\Recoil\\Stream\\Exception\\StreamClosedException","Icecave\/Recoil\/Stream\/Exception\/StreamClosedException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["StreamLockedException::__construct","Icecave\\Recoil\\Stream\\Exception\\StreamLockedException","Icecave\/Recoil\/Stream\/Exception\/StreamLockedException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["StreamReadException::__construct","Icecave\\Recoil\\Stream\\Exception\\StreamReadException","Icecave\/Recoil\/Stream\/Exception\/StreamReadException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["StreamWriteException::__construct","Icecave\\Recoil\\Stream\\Exception\\StreamWriteException","Icecave\/Recoil\/Stream\/Exception\/StreamWriteException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["ReadableReactStream::__construct","Icecave\\Recoil\\Stream\\ReadableReactStream","Icecave\/Recoil\/Stream\/ReadableReactStream.html#method___construct","(<abbr title=\"React\\Stream\\ReadableStreamInterface\">ReadableStreamInterface<\/abbr> $stream)","",2],["ReadableReactStream::read","Icecave\\Recoil\\Stream\\ReadableReactStream","Icecave\/Recoil\/Stream\/ReadableReactStream.html#method_read","(integer $length)","[COROUTINE] Read data from the stream.",2],["ReadableReactStream::close","Icecave\\Recoil\\Stream\\ReadableReactStream","Icecave\/Recoil\/Stream\/ReadableReactStream.html#method_close","()","[COROUTINE] Close this stream.",2],["ReadableReactStream::isClosed","Icecave\\Recoil\\Stream\\ReadableReactStream","Icecave\/Recoil\/Stream\/ReadableReactStream.html#method_isClosed","()","Check if this stream is closed.",2],["ReadableReactStream::onStreamData","Icecave\\Recoil\\Stream\\ReadableReactStream","Icecave\/Recoil\/Stream\/ReadableReactStream.html#method_onStreamData","($data)","",2],["ReadableReactStream::onStreamEnd","Icecave\\Recoil\\Stream\\ReadableReactStream","Icecave\/Recoil\/Stream\/ReadableReactStream.html#method_onStreamEnd","()","",2],["ReadableReactStream::onStreamClose","Icecave\\Recoil\\Stream\\ReadableReactStream","Icecave\/Recoil\/Stream\/ReadableReactStream.html#method_onStreamClose","()","",2],["ReadableReactStream::onStreamError","Icecave\\Recoil\\Stream\\ReadableReactStream","Icecave\/Recoil\/Stream\/ReadableReactStream.html#method_onStreamError","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","",2],["ReadableStream::__construct","Icecave\\Recoil\\Stream\\ReadableStream","Icecave\/Recoil\/Stream\/ReadableStream.html#method___construct","(<abbr title=\"Icecave\\Recoil\\Stream\\resource\">resource<\/abbr> $stream)","",2],["ReadableStream::read","Icecave\\Recoil\\Stream\\ReadableStream","Icecave\/Recoil\/Stream\/ReadableStream.html#method_read","(integer $length)","[COROUTINE] Read data from the stream.",2],["ReadableStream::close","Icecave\\Recoil\\Stream\\ReadableStream","Icecave\/Recoil\/Stream\/ReadableStream.html#method_close","()","[COROUTINE] Close this stream.",2],["ReadableStream::isClosed","Icecave\\Recoil\\Stream\\ReadableStream","Icecave\/Recoil\/Stream\/ReadableStream.html#method_isClosed","()","Check if this stream is closed.",2],["ReadableStreamInterface::read","Icecave\\Recoil\\Stream\\ReadableStreamInterface","Icecave\/Recoil\/Stream\/ReadableStreamInterface.html#method_read","(integer $length)","[COROUTINE] Read data from the stream.",2],["ReadableStreamInterface::close","Icecave\\Recoil\\Stream\\ReadableStreamInterface","Icecave\/Recoil\/Stream\/ReadableStreamInterface.html#method_close","()","[COROUTINE] Close this stream.",2],["ReadableStreamInterface::isClosed","Icecave\\Recoil\\Stream\\ReadableStreamInterface","Icecave\/Recoil\/Stream\/ReadableStreamInterface.html#method_isClosed","()","Check if this stream is closed.",2],["WritableReactStream::__construct","Icecave\\Recoil\\Stream\\WritableReactStream","Icecave\/Recoil\/Stream\/WritableReactStream.html#method___construct","(<abbr title=\"React\\Stream\\WritableStreamInterface\">WritableStreamInterface<\/abbr> $stream)","",2],["WritableReactStream::write","Icecave\\Recoil\\Stream\\WritableReactStream","Icecave\/Recoil\/Stream\/WritableReactStream.html#method_write","(string $buffer, integer|null $length = null)","[COROUTINE] Write data to this stream.",2],["WritableReactStream::writeAll","Icecave\\Recoil\\Stream\\WritableReactStream","Icecave\/Recoil\/Stream\/WritableReactStream.html#method_writeAll","(string $buffer)","[COROUTINE] Write all data from the given buffer to",2],["WritableReactStream::close","Icecave\\Recoil\\Stream\\WritableReactStream","Icecave\/Recoil\/Stream\/WritableReactStream.html#method_close","()","[COROUTINE] Close this stream.",2],["WritableReactStream::isClosed","Icecave\\Recoil\\Stream\\WritableReactStream","Icecave\/Recoil\/Stream\/WritableReactStream.html#method_isClosed","()","Check if this stream is closed.",2],["WritableReactStream::onStreamDrain","Icecave\\Recoil\\Stream\\WritableReactStream","Icecave\/Recoil\/Stream\/WritableReactStream.html#method_onStreamDrain","()","",2],["WritableReactStream::onStreamError","Icecave\\Recoil\\Stream\\WritableReactStream","Icecave\/Recoil\/Stream\/WritableReactStream.html#method_onStreamError","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception)","",2],["WritableStream::__construct","Icecave\\Recoil\\Stream\\WritableStream","Icecave\/Recoil\/Stream\/WritableStream.html#method___construct","(<abbr title=\"Icecave\\Recoil\\Stream\\resource\">resource<\/abbr> $stream)","",2],["WritableStream::write","Icecave\\Recoil\\Stream\\WritableStream","Icecave\/Recoil\/Stream\/WritableStream.html#method_write","(string $buffer, integer|null $length = null)","[COROUTINE] Write data to this stream.",2],["WritableStream::writeAll","Icecave\\Recoil\\Stream\\WritableStream","Icecave\/Recoil\/Stream\/WritableStream.html#method_writeAll","(string $buffer)","[COROUTINE] Write all data from the given buffer to",2],["WritableStream::close","Icecave\\Recoil\\Stream\\WritableStream","Icecave\/Recoil\/Stream\/WritableStream.html#method_close","()","[COROUTINE] Close this stream.",2],["WritableStream::isClosed","Icecave\\Recoil\\Stream\\WritableStream","Icecave\/Recoil\/Stream\/WritableStream.html#method_isClosed","()","Check if this stream is closed.",2],["WritableStreamInterface::write","Icecave\\Recoil\\Stream\\WritableStreamInterface","Icecave\/Recoil\/Stream\/WritableStreamInterface.html#method_write","(string $buffer, integer|null $length = null)","[COROUTINE] Write data to this stream.",2],["WritableStreamInterface::writeAll","Icecave\\Recoil\\Stream\\WritableStreamInterface","Icecave\/Recoil\/Stream\/WritableStreamInterface.html#method_writeAll","($buffer)","[COROUTINE] Write all data from the given buffer to",2],["WritableStreamInterface::close","Icecave\\Recoil\\Stream\\WritableStreamInterface","Icecave\/Recoil\/Stream\/WritableStreamInterface.html#method_close","()","[COROUTINE] Close this stream.",2],["WritableStreamInterface::isClosed","Icecave\\Recoil\\Stream\\WritableStreamInterface","Icecave\/Recoil\/Stream\/WritableStreamInterface.html#method_isClosed","()","Check if this stream is closed.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']